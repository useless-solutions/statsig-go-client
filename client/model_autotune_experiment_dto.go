/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AutotuneExperimentDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutotuneExperimentDto{}

// AutotuneExperimentDto struct for AutotuneExperimentDto
type AutotuneExperimentDto struct {
	// Detailed description of the configurationâ€™s purpose.
	Description string `json:"description"`
	Variants []AutotuneExperimentDtoVariantsInner `json:"variants"`
	// The event you are trying to optimize for.
	SuccessEvent string `json:"successEvent"`
	// The value that should come with the event for it to be considered successful.
	SuccessEventValue string `json:"successEventValue"`
	// The initial time period where Autotune will equally split the traffic.
	ExplorationWindow string `json:"explorationWindow"`
	// The maximum duration between the exposure and success event that counts as a success.
	AttributionWindow string `json:"attributionWindow"`
	// The \"probability of best\" threshold a variant needs to achieve for Autotune to declare it the winner, stop collecting data, and direct all traffic.
	WinnerThreshold string `json:"winnerThreshold"`
	// Metadata field containing the numeric value to optimize for. If this field is null, autotune optimizes for the existence of a follow-up event. This is only used for contextual autotunes.
	MetadataField *string `json:"metadataField,omitempty"`
	// Whether to optimize for an increase or decrease in the metadata field value. Default is true. This is only used for contextual autotunes.
	HigherIsBetter *bool `json:"higherIsBetter,omitempty"`
	// Whether this is a contextual autotune
	IsContextual *bool `json:"isContextual,omitempty"`
	// ID
	Id string `json:"id"`
	// Optional name for the configuration.
	Name *string `json:"name,omitempty"`
	// Type of ID
	IdType string `json:"idType"`
	// ID of the last modifier.
	LastModifierID nil `json:"lastModifierID"`
	// Time of the last modification.
	LastModifiedTime nil `json:"lastModifiedTime"`
	// Email of the last modifier.
	LastModifierEmail nil `json:"lastModifierEmail"`
	// Name of the last modifier.
	LastModifierName nil `json:"lastModifierName"`
	// ID of the user who created the entity.
	CreatorID nil `json:"creatorID"`
	// Timestamp when the entity was created.
	CreatedTime float32 `json:"createdTime"`
	// Name of the creator.
	CreatorName nil `json:"creatorName"`
	// Email of the creator.
	CreatorEmail nil `json:"creatorEmail"`
	// Optional tags for categorization.
	Tags []string `json:"tags,omitempty"`
	// List of target applications associated with this configuration.
	TargetApps []string `json:"targetApps,omitempty"`
	// Holdouts applied to this configuration.
	HoldoutIDs []string `json:"holdoutIDs,omitempty"`
	// Optional identifier for the responsible team.
	Team *nil `json:"team,omitempty"`
	// Version number
	Version *float32 `json:"version,omitempty"`
	// Is the autotune experiment currently running.
	IsStarted bool `json:"isStarted"`
	Winner nil `json:"winner"`
}

type _AutotuneExperimentDto AutotuneExperimentDto

// NewAutotuneExperimentDto instantiates a new AutotuneExperimentDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutotuneExperimentDto(description string, variants []AutotuneExperimentDtoVariantsInner, successEvent string, successEventValue string, explorationWindow string, attributionWindow string, winnerThreshold string, id string, idType string, lastModifierID nil, lastModifiedTime nil, lastModifierEmail nil, lastModifierName nil, creatorID nil, createdTime float32, creatorName nil, creatorEmail nil, isStarted bool, winner nil) *AutotuneExperimentDto {
	this := AutotuneExperimentDto{}
	this.Description = description
	this.Variants = variants
	this.SuccessEvent = successEvent
	this.SuccessEventValue = successEventValue
	this.ExplorationWindow = explorationWindow
	this.AttributionWindow = attributionWindow
	this.WinnerThreshold = winnerThreshold
	this.Id = id
	this.IdType = idType
	this.LastModifierID = lastModifierID
	this.LastModifiedTime = lastModifiedTime
	this.LastModifierEmail = lastModifierEmail
	this.LastModifierName = lastModifierName
	this.CreatorID = creatorID
	this.CreatedTime = createdTime
	this.CreatorName = creatorName
	this.CreatorEmail = creatorEmail
	this.IsStarted = isStarted
	this.Winner = winner
	return &this
}

// NewAutotuneExperimentDtoWithDefaults instantiates a new AutotuneExperimentDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutotuneExperimentDtoWithDefaults() *AutotuneExperimentDto {
	this := AutotuneExperimentDto{}
	return &this
}

// GetDescription returns the Description field value
func (o *AutotuneExperimentDto) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *AutotuneExperimentDto) SetDescription(v string) {
	o.Description = v
}

// GetVariants returns the Variants field value
func (o *AutotuneExperimentDto) GetVariants() []AutotuneExperimentDtoVariantsInner {
	if o == nil {
		var ret []AutotuneExperimentDtoVariantsInner
		return ret
	}

	return o.Variants
}

// GetVariantsOk returns a tuple with the Variants field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetVariantsOk() ([]AutotuneExperimentDtoVariantsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Variants, true
}

// SetVariants sets field value
func (o *AutotuneExperimentDto) SetVariants(v []AutotuneExperimentDtoVariantsInner) {
	o.Variants = v
}

// GetSuccessEvent returns the SuccessEvent field value
func (o *AutotuneExperimentDto) GetSuccessEvent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SuccessEvent
}

// GetSuccessEventOk returns a tuple with the SuccessEvent field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetSuccessEventOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SuccessEvent, true
}

// SetSuccessEvent sets field value
func (o *AutotuneExperimentDto) SetSuccessEvent(v string) {
	o.SuccessEvent = v
}

// GetSuccessEventValue returns the SuccessEventValue field value
func (o *AutotuneExperimentDto) GetSuccessEventValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SuccessEventValue
}

// GetSuccessEventValueOk returns a tuple with the SuccessEventValue field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetSuccessEventValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SuccessEventValue, true
}

// SetSuccessEventValue sets field value
func (o *AutotuneExperimentDto) SetSuccessEventValue(v string) {
	o.SuccessEventValue = v
}

// GetExplorationWindow returns the ExplorationWindow field value
func (o *AutotuneExperimentDto) GetExplorationWindow() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExplorationWindow
}

// GetExplorationWindowOk returns a tuple with the ExplorationWindow field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetExplorationWindowOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExplorationWindow, true
}

// SetExplorationWindow sets field value
func (o *AutotuneExperimentDto) SetExplorationWindow(v string) {
	o.ExplorationWindow = v
}

// GetAttributionWindow returns the AttributionWindow field value
func (o *AutotuneExperimentDto) GetAttributionWindow() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttributionWindow
}

// GetAttributionWindowOk returns a tuple with the AttributionWindow field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetAttributionWindowOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributionWindow, true
}

// SetAttributionWindow sets field value
func (o *AutotuneExperimentDto) SetAttributionWindow(v string) {
	o.AttributionWindow = v
}

// GetWinnerThreshold returns the WinnerThreshold field value
func (o *AutotuneExperimentDto) GetWinnerThreshold() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WinnerThreshold
}

// GetWinnerThresholdOk returns a tuple with the WinnerThreshold field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetWinnerThresholdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WinnerThreshold, true
}

// SetWinnerThreshold sets field value
func (o *AutotuneExperimentDto) SetWinnerThreshold(v string) {
	o.WinnerThreshold = v
}

// GetMetadataField returns the MetadataField field value if set, zero value otherwise.
func (o *AutotuneExperimentDto) GetMetadataField() string {
	if o == nil || IsNil(o.MetadataField) {
		var ret string
		return ret
	}
	return *o.MetadataField
}

// GetMetadataFieldOk returns a tuple with the MetadataField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetMetadataFieldOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataField) {
		return nil, false
	}
	return o.MetadataField, true
}

// HasMetadataField returns a boolean if a field has been set.
func (o *AutotuneExperimentDto) HasMetadataField() bool {
	if o != nil && !IsNil(o.MetadataField) {
		return true
	}

	return false
}

// SetMetadataField gets a reference to the given string and assigns it to the MetadataField field.
func (o *AutotuneExperimentDto) SetMetadataField(v string) {
	o.MetadataField = &v
}

// GetHigherIsBetter returns the HigherIsBetter field value if set, zero value otherwise.
func (o *AutotuneExperimentDto) GetHigherIsBetter() bool {
	if o == nil || IsNil(o.HigherIsBetter) {
		var ret bool
		return ret
	}
	return *o.HigherIsBetter
}

// GetHigherIsBetterOk returns a tuple with the HigherIsBetter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetHigherIsBetterOk() (*bool, bool) {
	if o == nil || IsNil(o.HigherIsBetter) {
		return nil, false
	}
	return o.HigherIsBetter, true
}

// HasHigherIsBetter returns a boolean if a field has been set.
func (o *AutotuneExperimentDto) HasHigherIsBetter() bool {
	if o != nil && !IsNil(o.HigherIsBetter) {
		return true
	}

	return false
}

// SetHigherIsBetter gets a reference to the given bool and assigns it to the HigherIsBetter field.
func (o *AutotuneExperimentDto) SetHigherIsBetter(v bool) {
	o.HigherIsBetter = &v
}

// GetIsContextual returns the IsContextual field value if set, zero value otherwise.
func (o *AutotuneExperimentDto) GetIsContextual() bool {
	if o == nil || IsNil(o.IsContextual) {
		var ret bool
		return ret
	}
	return *o.IsContextual
}

// GetIsContextualOk returns a tuple with the IsContextual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetIsContextualOk() (*bool, bool) {
	if o == nil || IsNil(o.IsContextual) {
		return nil, false
	}
	return o.IsContextual, true
}

// HasIsContextual returns a boolean if a field has been set.
func (o *AutotuneExperimentDto) HasIsContextual() bool {
	if o != nil && !IsNil(o.IsContextual) {
		return true
	}

	return false
}

// SetIsContextual gets a reference to the given bool and assigns it to the IsContextual field.
func (o *AutotuneExperimentDto) SetIsContextual(v bool) {
	o.IsContextual = &v
}

// GetId returns the Id field value
func (o *AutotuneExperimentDto) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AutotuneExperimentDto) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AutotuneExperimentDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AutotuneExperimentDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AutotuneExperimentDto) SetName(v string) {
	o.Name = &v
}

// GetIdType returns the IdType field value
func (o *AutotuneExperimentDto) GetIdType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdType
}

// GetIdTypeOk returns a tuple with the IdType field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetIdTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdType, true
}

// SetIdType sets field value
func (o *AutotuneExperimentDto) SetIdType(v string) {
	o.IdType = v
}

// GetLastModifierID returns the LastModifierID field value
func (o *AutotuneExperimentDto) GetLastModifierID() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.LastModifierID
}

// GetLastModifierIDOk returns a tuple with the LastModifierID field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetLastModifierIDOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifierID, true
}

// SetLastModifierID sets field value
func (o *AutotuneExperimentDto) SetLastModifierID(v nil) {
	o.LastModifierID = v
}

// GetLastModifiedTime returns the LastModifiedTime field value
func (o *AutotuneExperimentDto) GetLastModifiedTime() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetLastModifiedTimeOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifiedTime, true
}

// SetLastModifiedTime sets field value
func (o *AutotuneExperimentDto) SetLastModifiedTime(v nil) {
	o.LastModifiedTime = v
}

// GetLastModifierEmail returns the LastModifierEmail field value
func (o *AutotuneExperimentDto) GetLastModifierEmail() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.LastModifierEmail
}

// GetLastModifierEmailOk returns a tuple with the LastModifierEmail field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetLastModifierEmailOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifierEmail, true
}

// SetLastModifierEmail sets field value
func (o *AutotuneExperimentDto) SetLastModifierEmail(v nil) {
	o.LastModifierEmail = v
}

// GetLastModifierName returns the LastModifierName field value
func (o *AutotuneExperimentDto) GetLastModifierName() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.LastModifierName
}

// GetLastModifierNameOk returns a tuple with the LastModifierName field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetLastModifierNameOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifierName, true
}

// SetLastModifierName sets field value
func (o *AutotuneExperimentDto) SetLastModifierName(v nil) {
	o.LastModifierName = v
}

// GetCreatorID returns the CreatorID field value
func (o *AutotuneExperimentDto) GetCreatorID() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.CreatorID
}

// GetCreatorIDOk returns a tuple with the CreatorID field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetCreatorIDOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorID, true
}

// SetCreatorID sets field value
func (o *AutotuneExperimentDto) SetCreatorID(v nil) {
	o.CreatorID = v
}

// GetCreatedTime returns the CreatedTime field value
func (o *AutotuneExperimentDto) GetCreatedTime() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetCreatedTimeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *AutotuneExperimentDto) SetCreatedTime(v float32) {
	o.CreatedTime = v
}

// GetCreatorName returns the CreatorName field value
func (o *AutotuneExperimentDto) GetCreatorName() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.CreatorName
}

// GetCreatorNameOk returns a tuple with the CreatorName field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetCreatorNameOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorName, true
}

// SetCreatorName sets field value
func (o *AutotuneExperimentDto) SetCreatorName(v nil) {
	o.CreatorName = v
}

// GetCreatorEmail returns the CreatorEmail field value
func (o *AutotuneExperimentDto) GetCreatorEmail() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.CreatorEmail
}

// GetCreatorEmailOk returns a tuple with the CreatorEmail field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetCreatorEmailOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorEmail, true
}

// SetCreatorEmail sets field value
func (o *AutotuneExperimentDto) SetCreatorEmail(v nil) {
	o.CreatorEmail = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AutotuneExperimentDto) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AutotuneExperimentDto) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *AutotuneExperimentDto) SetTags(v []string) {
	o.Tags = v
}

// GetTargetApps returns the TargetApps field value if set, zero value otherwise.
func (o *AutotuneExperimentDto) GetTargetApps() []string {
	if o == nil || IsNil(o.TargetApps) {
		var ret []string
		return ret
	}
	return o.TargetApps
}

// GetTargetAppsOk returns a tuple with the TargetApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetTargetAppsOk() ([]string, bool) {
	if o == nil || IsNil(o.TargetApps) {
		return nil, false
	}
	return o.TargetApps, true
}

// HasTargetApps returns a boolean if a field has been set.
func (o *AutotuneExperimentDto) HasTargetApps() bool {
	if o != nil && !IsNil(o.TargetApps) {
		return true
	}

	return false
}

// SetTargetApps gets a reference to the given []string and assigns it to the TargetApps field.
func (o *AutotuneExperimentDto) SetTargetApps(v []string) {
	o.TargetApps = v
}

// GetHoldoutIDs returns the HoldoutIDs field value if set, zero value otherwise.
func (o *AutotuneExperimentDto) GetHoldoutIDs() []string {
	if o == nil || IsNil(o.HoldoutIDs) {
		var ret []string
		return ret
	}
	return o.HoldoutIDs
}

// GetHoldoutIDsOk returns a tuple with the HoldoutIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetHoldoutIDsOk() ([]string, bool) {
	if o == nil || IsNil(o.HoldoutIDs) {
		return nil, false
	}
	return o.HoldoutIDs, true
}

// HasHoldoutIDs returns a boolean if a field has been set.
func (o *AutotuneExperimentDto) HasHoldoutIDs() bool {
	if o != nil && !IsNil(o.HoldoutIDs) {
		return true
	}

	return false
}

// SetHoldoutIDs gets a reference to the given []string and assigns it to the HoldoutIDs field.
func (o *AutotuneExperimentDto) SetHoldoutIDs(v []string) {
	o.HoldoutIDs = v
}

// GetTeam returns the Team field value if set, zero value otherwise.
func (o *AutotuneExperimentDto) GetTeam() nil {
	if o == nil || IsNil(o.Team) {
		var ret nil
		return ret
	}
	return *o.Team
}

// GetTeamOk returns a tuple with the Team field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetTeamOk() (*nil, bool) {
	if o == nil || IsNil(o.Team) {
		return nil, false
	}
	return o.Team, true
}

// HasTeam returns a boolean if a field has been set.
func (o *AutotuneExperimentDto) HasTeam() bool {
	if o != nil && !IsNil(o.Team) {
		return true
	}

	return false
}

// SetTeam gets a reference to the given nil and assigns it to the Team field.
func (o *AutotuneExperimentDto) SetTeam(v nil) {
	o.Team = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AutotuneExperimentDto) GetVersion() float32 {
	if o == nil || IsNil(o.Version) {
		var ret float32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetVersionOk() (*float32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AutotuneExperimentDto) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given float32 and assigns it to the Version field.
func (o *AutotuneExperimentDto) SetVersion(v float32) {
	o.Version = &v
}

// GetIsStarted returns the IsStarted field value
func (o *AutotuneExperimentDto) GetIsStarted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsStarted
}

// GetIsStartedOk returns a tuple with the IsStarted field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetIsStartedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsStarted, true
}

// SetIsStarted sets field value
func (o *AutotuneExperimentDto) SetIsStarted(v bool) {
	o.IsStarted = v
}

// GetWinner returns the Winner field value
func (o *AutotuneExperimentDto) GetWinner() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.Winner
}

// GetWinnerOk returns a tuple with the Winner field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDto) GetWinnerOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Winner, true
}

// SetWinner sets field value
func (o *AutotuneExperimentDto) SetWinner(v nil) {
	o.Winner = v
}

func (o AutotuneExperimentDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutotuneExperimentDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["variants"] = o.Variants
	toSerialize["successEvent"] = o.SuccessEvent
	toSerialize["successEventValue"] = o.SuccessEventValue
	toSerialize["explorationWindow"] = o.ExplorationWindow
	toSerialize["attributionWindow"] = o.AttributionWindow
	toSerialize["winnerThreshold"] = o.WinnerThreshold
	if !IsNil(o.MetadataField) {
		toSerialize["metadataField"] = o.MetadataField
	}
	if !IsNil(o.HigherIsBetter) {
		toSerialize["higherIsBetter"] = o.HigherIsBetter
	}
	if !IsNil(o.IsContextual) {
		toSerialize["isContextual"] = o.IsContextual
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["idType"] = o.IdType
	toSerialize["lastModifierID"] = o.LastModifierID
	toSerialize["lastModifiedTime"] = o.LastModifiedTime
	toSerialize["lastModifierEmail"] = o.LastModifierEmail
	toSerialize["lastModifierName"] = o.LastModifierName
	toSerialize["creatorID"] = o.CreatorID
	toSerialize["createdTime"] = o.CreatedTime
	toSerialize["creatorName"] = o.CreatorName
	toSerialize["creatorEmail"] = o.CreatorEmail
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.TargetApps) {
		toSerialize["targetApps"] = o.TargetApps
	}
	if !IsNil(o.HoldoutIDs) {
		toSerialize["holdoutIDs"] = o.HoldoutIDs
	}
	if !IsNil(o.Team) {
		toSerialize["team"] = o.Team
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	toSerialize["isStarted"] = o.IsStarted
	toSerialize["winner"] = o.Winner
	return toSerialize, nil
}

func (o *AutotuneExperimentDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"variants",
		"successEvent",
		"successEventValue",
		"explorationWindow",
		"attributionWindow",
		"winnerThreshold",
		"id",
		"idType",
		"lastModifierID",
		"lastModifiedTime",
		"lastModifierEmail",
		"lastModifierName",
		"creatorID",
		"createdTime",
		"creatorName",
		"creatorEmail",
		"isStarted",
		"winner",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutotuneExperimentDto := _AutotuneExperimentDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutotuneExperimentDto)

	if err != nil {
		return err
	}

	*o = AutotuneExperimentDto(varAutotuneExperimentDto)

	return err
}

type NullableAutotuneExperimentDto struct {
	value *AutotuneExperimentDto
	isSet bool
}

func (v NullableAutotuneExperimentDto) Get() *AutotuneExperimentDto {
	return v.value
}

func (v *NullableAutotuneExperimentDto) Set(val *AutotuneExperimentDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAutotuneExperimentDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAutotuneExperimentDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutotuneExperimentDto(val *AutotuneExperimentDto) *NullableAutotuneExperimentDto {
	return &NullableAutotuneExperimentDto{value: val, isSet: true}
}

func (v NullableAutotuneExperimentDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutotuneExperimentDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


