/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AutotuneExperimentDtoVariantsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutotuneExperimentDtoVariantsInner{}

// AutotuneExperimentDtoVariantsInner struct for AutotuneExperimentDtoVariantsInner
type AutotuneExperimentDtoVariantsInner struct {
	// Variant name
	Name string `json:"name"`
	// Variant JSON data
	Json interface{} `json:"json"`
	// The name that was originally given to the autotune on creation but formatted as an ID (\"A Autotune\" -> \"a_autotune\").
	Id string `json:"id"`
}

type _AutotuneExperimentDtoVariantsInner AutotuneExperimentDtoVariantsInner

// NewAutotuneExperimentDtoVariantsInner instantiates a new AutotuneExperimentDtoVariantsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutotuneExperimentDtoVariantsInner(name string, json interface{}, id string) *AutotuneExperimentDtoVariantsInner {
	this := AutotuneExperimentDtoVariantsInner{}
	this.Name = name
	this.Json = json
	this.Id = id
	return &this
}

// NewAutotuneExperimentDtoVariantsInnerWithDefaults instantiates a new AutotuneExperimentDtoVariantsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutotuneExperimentDtoVariantsInnerWithDefaults() *AutotuneExperimentDtoVariantsInner {
	this := AutotuneExperimentDtoVariantsInner{}
	return &this
}

// GetName returns the Name field value
func (o *AutotuneExperimentDtoVariantsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDtoVariantsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AutotuneExperimentDtoVariantsInner) SetName(v string) {
	o.Name = v
}

// GetJson returns the Json field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *AutotuneExperimentDtoVariantsInner) GetJson() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Json
}

// GetJsonOk returns a tuple with the Json field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutotuneExperimentDtoVariantsInner) GetJsonOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Json) {
		return nil, false
	}
	return &o.Json, true
}

// SetJson sets field value
func (o *AutotuneExperimentDtoVariantsInner) SetJson(v interface{}) {
	o.Json = v
}

// GetId returns the Id field value
func (o *AutotuneExperimentDtoVariantsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AutotuneExperimentDtoVariantsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AutotuneExperimentDtoVariantsInner) SetId(v string) {
	o.Id = v
}

func (o AutotuneExperimentDtoVariantsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutotuneExperimentDtoVariantsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if o.Json != nil {
		toSerialize["json"] = o.Json
	}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *AutotuneExperimentDtoVariantsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"json",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutotuneExperimentDtoVariantsInner := _AutotuneExperimentDtoVariantsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutotuneExperimentDtoVariantsInner)

	if err != nil {
		return err
	}

	*o = AutotuneExperimentDtoVariantsInner(varAutotuneExperimentDtoVariantsInner)

	return err
}

type NullableAutotuneExperimentDtoVariantsInner struct {
	value *AutotuneExperimentDtoVariantsInner
	isSet bool
}

func (v NullableAutotuneExperimentDtoVariantsInner) Get() *AutotuneExperimentDtoVariantsInner {
	return v.value
}

func (v *NullableAutotuneExperimentDtoVariantsInner) Set(val *AutotuneExperimentDtoVariantsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAutotuneExperimentDtoVariantsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAutotuneExperimentDtoVariantsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutotuneExperimentDtoVariantsInner(val *AutotuneExperimentDtoVariantsInner) *NullableAutotuneExperimentDtoVariantsInner {
	return &NullableAutotuneExperimentDtoVariantsInner{value: val, isSet: true}
}

func (v NullableAutotuneExperimentDtoVariantsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutotuneExperimentDtoVariantsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


