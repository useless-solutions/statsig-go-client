/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConsoleV1AlertsControllerGenList200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsoleV1AlertsControllerGenList200Response{}

// ConsoleV1AlertsControllerGenList200Response struct for ConsoleV1AlertsControllerGenList200Response
type ConsoleV1AlertsControllerGenList200Response struct {
	// A simple string explaining the result of the operation.
	Message string `json:"message"`
	Data []AlertSchemaDto `json:"data"`
	// Pagination metadata for checking if there is next page for example.
	Pagination PaginationResponseMetadataDto `json:"pagination"`
}

type _ConsoleV1AlertsControllerGenList200Response ConsoleV1AlertsControllerGenList200Response

// NewConsoleV1AlertsControllerGenList200Response instantiates a new ConsoleV1AlertsControllerGenList200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsoleV1AlertsControllerGenList200Response(message string, data []AlertSchemaDto, pagination PaginationResponseMetadataDto) *ConsoleV1AlertsControllerGenList200Response {
	this := ConsoleV1AlertsControllerGenList200Response{}
	this.Message = message
	this.Data = data
	this.Pagination = pagination
	return &this
}

// NewConsoleV1AlertsControllerGenList200ResponseWithDefaults instantiates a new ConsoleV1AlertsControllerGenList200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsoleV1AlertsControllerGenList200ResponseWithDefaults() *ConsoleV1AlertsControllerGenList200Response {
	this := ConsoleV1AlertsControllerGenList200Response{}
	return &this
}

// GetMessage returns the Message field value
func (o *ConsoleV1AlertsControllerGenList200Response) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ConsoleV1AlertsControllerGenList200Response) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ConsoleV1AlertsControllerGenList200Response) SetMessage(v string) {
	o.Message = v
}

// GetData returns the Data field value
func (o *ConsoleV1AlertsControllerGenList200Response) GetData() []AlertSchemaDto {
	if o == nil {
		var ret []AlertSchemaDto
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ConsoleV1AlertsControllerGenList200Response) GetDataOk() ([]AlertSchemaDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *ConsoleV1AlertsControllerGenList200Response) SetData(v []AlertSchemaDto) {
	o.Data = v
}

// GetPagination returns the Pagination field value
func (o *ConsoleV1AlertsControllerGenList200Response) GetPagination() PaginationResponseMetadataDto {
	if o == nil {
		var ret PaginationResponseMetadataDto
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *ConsoleV1AlertsControllerGenList200Response) GetPaginationOk() (*PaginationResponseMetadataDto, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value
func (o *ConsoleV1AlertsControllerGenList200Response) SetPagination(v PaginationResponseMetadataDto) {
	o.Pagination = v
}

func (o ConsoleV1AlertsControllerGenList200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsoleV1AlertsControllerGenList200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	toSerialize["data"] = o.Data
	toSerialize["pagination"] = o.Pagination
	return toSerialize, nil
}

func (o *ConsoleV1AlertsControllerGenList200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
		"data",
		"pagination",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConsoleV1AlertsControllerGenList200Response := _ConsoleV1AlertsControllerGenList200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConsoleV1AlertsControllerGenList200Response)

	if err != nil {
		return err
	}

	*o = ConsoleV1AlertsControllerGenList200Response(varConsoleV1AlertsControllerGenList200Response)

	return err
}

type NullableConsoleV1AlertsControllerGenList200Response struct {
	value *ConsoleV1AlertsControllerGenList200Response
	isSet bool
}

func (v NullableConsoleV1AlertsControllerGenList200Response) Get() *ConsoleV1AlertsControllerGenList200Response {
	return v.value
}

func (v *NullableConsoleV1AlertsControllerGenList200Response) Set(val *ConsoleV1AlertsControllerGenList200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableConsoleV1AlertsControllerGenList200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableConsoleV1AlertsControllerGenList200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsoleV1AlertsControllerGenList200Response(val *ConsoleV1AlertsControllerGenList200Response) *NullableConsoleV1AlertsControllerGenList200Response {
	return &NullableConsoleV1AlertsControllerGenList200Response{value: val, isSet: true}
}

func (v NullableConsoleV1AlertsControllerGenList200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsoleV1AlertsControllerGenList200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


