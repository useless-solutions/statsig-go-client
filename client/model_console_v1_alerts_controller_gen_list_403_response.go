/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConsoleV1AlertsControllerGenList403Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsoleV1AlertsControllerGenList403Response{}

// ConsoleV1AlertsControllerGenList403Response struct for ConsoleV1AlertsControllerGenList403Response
type ConsoleV1AlertsControllerGenList403Response struct {
	Status float32 `json:"status"`
	Message string `json:"message"`
}

type _ConsoleV1AlertsControllerGenList403Response ConsoleV1AlertsControllerGenList403Response

// NewConsoleV1AlertsControllerGenList403Response instantiates a new ConsoleV1AlertsControllerGenList403Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsoleV1AlertsControllerGenList403Response(status float32, message string) *ConsoleV1AlertsControllerGenList403Response {
	this := ConsoleV1AlertsControllerGenList403Response{}
	this.Status = status
	this.Message = message
	return &this
}

// NewConsoleV1AlertsControllerGenList403ResponseWithDefaults instantiates a new ConsoleV1AlertsControllerGenList403Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsoleV1AlertsControllerGenList403ResponseWithDefaults() *ConsoleV1AlertsControllerGenList403Response {
	this := ConsoleV1AlertsControllerGenList403Response{}
	return &this
}

// GetStatus returns the Status field value
func (o *ConsoleV1AlertsControllerGenList403Response) GetStatus() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ConsoleV1AlertsControllerGenList403Response) GetStatusOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ConsoleV1AlertsControllerGenList403Response) SetStatus(v float32) {
	o.Status = v
}

// GetMessage returns the Message field value
func (o *ConsoleV1AlertsControllerGenList403Response) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ConsoleV1AlertsControllerGenList403Response) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ConsoleV1AlertsControllerGenList403Response) SetMessage(v string) {
	o.Message = v
}

func (o ConsoleV1AlertsControllerGenList403Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsoleV1AlertsControllerGenList403Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

func (o *ConsoleV1AlertsControllerGenList403Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConsoleV1AlertsControllerGenList403Response := _ConsoleV1AlertsControllerGenList403Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConsoleV1AlertsControllerGenList403Response)

	if err != nil {
		return err
	}

	*o = ConsoleV1AlertsControllerGenList403Response(varConsoleV1AlertsControllerGenList403Response)

	return err
}

type NullableConsoleV1AlertsControllerGenList403Response struct {
	value *ConsoleV1AlertsControllerGenList403Response
	isSet bool
}

func (v NullableConsoleV1AlertsControllerGenList403Response) Get() *ConsoleV1AlertsControllerGenList403Response {
	return v.value
}

func (v *NullableConsoleV1AlertsControllerGenList403Response) Set(val *ConsoleV1AlertsControllerGenList403Response) {
	v.value = val
	v.isSet = true
}

func (v NullableConsoleV1AlertsControllerGenList403Response) IsSet() bool {
	return v.isSet
}

func (v *NullableConsoleV1AlertsControllerGenList403Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsoleV1AlertsControllerGenList403Response(val *ConsoleV1AlertsControllerGenList403Response) *NullableConsoleV1AlertsControllerGenList403Response {
	return &NullableConsoleV1AlertsControllerGenList403Response{value: val, isSet: true}
}

func (v NullableConsoleV1AlertsControllerGenList403Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsoleV1AlertsControllerGenList403Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


