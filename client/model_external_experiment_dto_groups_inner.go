/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExternalExperimentDtoGroupsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalExperimentDtoGroupsInner{}

// ExternalExperimentDtoGroupsInner struct for ExternalExperimentDtoGroupsInner
type ExternalExperimentDtoGroupsInner struct {
	Name string `json:"name"`
	Id *nil `json:"id,omitempty"`
	Size float32 `json:"size"`
	ParameterValues map[string]interface{} `json:"parameterValues"`
	Disabled *bool `json:"disabled,omitempty"`
	Description *string `json:"description,omitempty"`
	ForeignGroupID *string `json:"foreignGroupID,omitempty"`
}

type _ExternalExperimentDtoGroupsInner ExternalExperimentDtoGroupsInner

// NewExternalExperimentDtoGroupsInner instantiates a new ExternalExperimentDtoGroupsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalExperimentDtoGroupsInner(name string, size float32, parameterValues map[string]interface{}) *ExternalExperimentDtoGroupsInner {
	this := ExternalExperimentDtoGroupsInner{}
	this.Name = name
	this.Size = size
	this.ParameterValues = parameterValues
	return &this
}

// NewExternalExperimentDtoGroupsInnerWithDefaults instantiates a new ExternalExperimentDtoGroupsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalExperimentDtoGroupsInnerWithDefaults() *ExternalExperimentDtoGroupsInner {
	this := ExternalExperimentDtoGroupsInner{}
	return &this
}

// GetName returns the Name field value
func (o *ExternalExperimentDtoGroupsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ExternalExperimentDtoGroupsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ExternalExperimentDtoGroupsInner) SetName(v string) {
	o.Name = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ExternalExperimentDtoGroupsInner) GetId() nil {
	if o == nil || IsNil(o.Id) {
		var ret nil
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalExperimentDtoGroupsInner) GetIdOk() (*nil, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ExternalExperimentDtoGroupsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given nil and assigns it to the Id field.
func (o *ExternalExperimentDtoGroupsInner) SetId(v nil) {
	o.Id = &v
}

// GetSize returns the Size field value
func (o *ExternalExperimentDtoGroupsInner) GetSize() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *ExternalExperimentDtoGroupsInner) GetSizeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *ExternalExperimentDtoGroupsInner) SetSize(v float32) {
	o.Size = v
}

// GetParameterValues returns the ParameterValues field value
func (o *ExternalExperimentDtoGroupsInner) GetParameterValues() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ParameterValues
}

// GetParameterValuesOk returns a tuple with the ParameterValues field value
// and a boolean to check if the value has been set.
func (o *ExternalExperimentDtoGroupsInner) GetParameterValuesOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.ParameterValues, true
}

// SetParameterValues sets field value
func (o *ExternalExperimentDtoGroupsInner) SetParameterValues(v map[string]interface{}) {
	o.ParameterValues = v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *ExternalExperimentDtoGroupsInner) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalExperimentDtoGroupsInner) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *ExternalExperimentDtoGroupsInner) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *ExternalExperimentDtoGroupsInner) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ExternalExperimentDtoGroupsInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalExperimentDtoGroupsInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ExternalExperimentDtoGroupsInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ExternalExperimentDtoGroupsInner) SetDescription(v string) {
	o.Description = &v
}

// GetForeignGroupID returns the ForeignGroupID field value if set, zero value otherwise.
func (o *ExternalExperimentDtoGroupsInner) GetForeignGroupID() string {
	if o == nil || IsNil(o.ForeignGroupID) {
		var ret string
		return ret
	}
	return *o.ForeignGroupID
}

// GetForeignGroupIDOk returns a tuple with the ForeignGroupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalExperimentDtoGroupsInner) GetForeignGroupIDOk() (*string, bool) {
	if o == nil || IsNil(o.ForeignGroupID) {
		return nil, false
	}
	return o.ForeignGroupID, true
}

// HasForeignGroupID returns a boolean if a field has been set.
func (o *ExternalExperimentDtoGroupsInner) HasForeignGroupID() bool {
	if o != nil && !IsNil(o.ForeignGroupID) {
		return true
	}

	return false
}

// SetForeignGroupID gets a reference to the given string and assigns it to the ForeignGroupID field.
func (o *ExternalExperimentDtoGroupsInner) SetForeignGroupID(v string) {
	o.ForeignGroupID = &v
}

func (o ExternalExperimentDtoGroupsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalExperimentDtoGroupsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["size"] = o.Size
	toSerialize["parameterValues"] = o.ParameterValues
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ForeignGroupID) {
		toSerialize["foreignGroupID"] = o.ForeignGroupID
	}
	return toSerialize, nil
}

func (o *ExternalExperimentDtoGroupsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"size",
		"parameterValues",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalExperimentDtoGroupsInner := _ExternalExperimentDtoGroupsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalExperimentDtoGroupsInner)

	if err != nil {
		return err
	}

	*o = ExternalExperimentDtoGroupsInner(varExternalExperimentDtoGroupsInner)

	return err
}

type NullableExternalExperimentDtoGroupsInner struct {
	value *ExternalExperimentDtoGroupsInner
	isSet bool
}

func (v NullableExternalExperimentDtoGroupsInner) Get() *ExternalExperimentDtoGroupsInner {
	return v.value
}

func (v *NullableExternalExperimentDtoGroupsInner) Set(val *ExternalExperimentDtoGroupsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalExperimentDtoGroupsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalExperimentDtoGroupsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalExperimentDtoGroupsInner(val *ExternalExperimentDtoGroupsInner) *NullableExternalExperimentDtoGroupsInner {
	return &NullableExternalExperimentDtoGroupsInner{value: val, isSet: true}
}

func (v NullableExternalExperimentDtoGroupsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalExperimentDtoGroupsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


