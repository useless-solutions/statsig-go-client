/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExternalGateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalGateDto{}

// ExternalGateDto struct for ExternalGateDto
type ExternalGateDto struct {
	// ID
	Id string `json:"id"`
	// Optional name for the configuration.
	Name *string `json:"name,omitempty"`
	IdType *string `json:"idType,omitempty"`
	Description string `json:"description"`
	// ID of the last modifier.
	LastModifierID nil `json:"lastModifierID"`
	// Time of the last modification.
	LastModifiedTime nil `json:"lastModifiedTime"`
	// Email of the last modifier.
	LastModifierEmail nil `json:"lastModifierEmail"`
	// Name of the last modifier.
	LastModifierName nil `json:"lastModifierName"`
	CreatorID *nil `json:"creatorID,omitempty"`
	// Timestamp when the entity was created.
	CreatedTime float32 `json:"createdTime"`
	// Name of the creator.
	CreatorName nil `json:"creatorName"`
	CreatorEmail *nil `json:"creatorEmail,omitempty"`
	Tags []string `json:"tags,omitempty"`
	TargetApps *DynamicConfigDtoTargetApps `json:"targetApps,omitempty"`
	// Holdouts applied to this configuration.
	HoldoutIDs []string `json:"holdoutIDs,omitempty"`
	Team *nil `json:"team,omitempty"`
	// Version number
	Version *float32 `json:"version,omitempty"`
	ChecksPerHour nil `json:"checksPerHour"`
	Status string `json:"status"`
	Type string `json:"type"`
	TypeReason string `json:"typeReason"`
	// Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.
	Owner *nil `json:"owner,omitempty"`
	IsEnabled bool `json:"isEnabled"`
	Rules []ExternalGateDtoRulesInner `json:"rules"`
	MeasureMetricLifts *bool `json:"measureMetricLifts,omitempty"`
	MonitoringMetrics []ExternalGateDtoMonitoringMetricsInner `json:"monitoringMetrics,omitempty"`
	ReviewSettings *ExternalGateDtoReviewSettings `json:"reviewSettings,omitempty"`
	ActiveReview *ExternalGateDtoActiveReview `json:"activeReview,omitempty"`
}

type _ExternalGateDto ExternalGateDto

// NewExternalGateDto instantiates a new ExternalGateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalGateDto(id string, description string, lastModifierID nil, lastModifiedTime nil, lastModifierEmail nil, lastModifierName nil, createdTime float32, creatorName nil, checksPerHour nil, status string, type_ string, typeReason string, isEnabled bool, rules []ExternalGateDtoRulesInner) *ExternalGateDto {
	this := ExternalGateDto{}
	this.Id = id
	this.Description = description
	this.LastModifierID = lastModifierID
	this.LastModifiedTime = lastModifiedTime
	this.LastModifierEmail = lastModifierEmail
	this.LastModifierName = lastModifierName
	this.CreatedTime = createdTime
	this.CreatorName = creatorName
	this.ChecksPerHour = checksPerHour
	this.Status = status
	this.Type = type_
	this.TypeReason = typeReason
	this.IsEnabled = isEnabled
	this.Rules = rules
	return &this
}

// NewExternalGateDtoWithDefaults instantiates a new ExternalGateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalGateDtoWithDefaults() *ExternalGateDto {
	this := ExternalGateDto{}
	return &this
}

// GetId returns the Id field value
func (o *ExternalGateDto) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ExternalGateDto) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ExternalGateDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ExternalGateDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ExternalGateDto) SetName(v string) {
	o.Name = &v
}

// GetIdType returns the IdType field value if set, zero value otherwise.
func (o *ExternalGateDto) GetIdType() string {
	if o == nil || IsNil(o.IdType) {
		var ret string
		return ret
	}
	return *o.IdType
}

// GetIdTypeOk returns a tuple with the IdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetIdTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IdType) {
		return nil, false
	}
	return o.IdType, true
}

// HasIdType returns a boolean if a field has been set.
func (o *ExternalGateDto) HasIdType() bool {
	if o != nil && !IsNil(o.IdType) {
		return true
	}

	return false
}

// SetIdType gets a reference to the given string and assigns it to the IdType field.
func (o *ExternalGateDto) SetIdType(v string) {
	o.IdType = &v
}

// GetDescription returns the Description field value
func (o *ExternalGateDto) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ExternalGateDto) SetDescription(v string) {
	o.Description = v
}

// GetLastModifierID returns the LastModifierID field value
func (o *ExternalGateDto) GetLastModifierID() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.LastModifierID
}

// GetLastModifierIDOk returns a tuple with the LastModifierID field value
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetLastModifierIDOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifierID, true
}

// SetLastModifierID sets field value
func (o *ExternalGateDto) SetLastModifierID(v nil) {
	o.LastModifierID = v
}

// GetLastModifiedTime returns the LastModifiedTime field value
func (o *ExternalGateDto) GetLastModifiedTime() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetLastModifiedTimeOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifiedTime, true
}

// SetLastModifiedTime sets field value
func (o *ExternalGateDto) SetLastModifiedTime(v nil) {
	o.LastModifiedTime = v
}

// GetLastModifierEmail returns the LastModifierEmail field value
func (o *ExternalGateDto) GetLastModifierEmail() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.LastModifierEmail
}

// GetLastModifierEmailOk returns a tuple with the LastModifierEmail field value
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetLastModifierEmailOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifierEmail, true
}

// SetLastModifierEmail sets field value
func (o *ExternalGateDto) SetLastModifierEmail(v nil) {
	o.LastModifierEmail = v
}

// GetLastModifierName returns the LastModifierName field value
func (o *ExternalGateDto) GetLastModifierName() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.LastModifierName
}

// GetLastModifierNameOk returns a tuple with the LastModifierName field value
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetLastModifierNameOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifierName, true
}

// SetLastModifierName sets field value
func (o *ExternalGateDto) SetLastModifierName(v nil) {
	o.LastModifierName = v
}

// GetCreatorID returns the CreatorID field value if set, zero value otherwise.
func (o *ExternalGateDto) GetCreatorID() nil {
	if o == nil || IsNil(o.CreatorID) {
		var ret nil
		return ret
	}
	return *o.CreatorID
}

// GetCreatorIDOk returns a tuple with the CreatorID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetCreatorIDOk() (*nil, bool) {
	if o == nil || IsNil(o.CreatorID) {
		return nil, false
	}
	return o.CreatorID, true
}

// HasCreatorID returns a boolean if a field has been set.
func (o *ExternalGateDto) HasCreatorID() bool {
	if o != nil && !IsNil(o.CreatorID) {
		return true
	}

	return false
}

// SetCreatorID gets a reference to the given nil and assigns it to the CreatorID field.
func (o *ExternalGateDto) SetCreatorID(v nil) {
	o.CreatorID = &v
}

// GetCreatedTime returns the CreatedTime field value
func (o *ExternalGateDto) GetCreatedTime() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetCreatedTimeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *ExternalGateDto) SetCreatedTime(v float32) {
	o.CreatedTime = v
}

// GetCreatorName returns the CreatorName field value
func (o *ExternalGateDto) GetCreatorName() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.CreatorName
}

// GetCreatorNameOk returns a tuple with the CreatorName field value
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetCreatorNameOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorName, true
}

// SetCreatorName sets field value
func (o *ExternalGateDto) SetCreatorName(v nil) {
	o.CreatorName = v
}

// GetCreatorEmail returns the CreatorEmail field value if set, zero value otherwise.
func (o *ExternalGateDto) GetCreatorEmail() nil {
	if o == nil || IsNil(o.CreatorEmail) {
		var ret nil
		return ret
	}
	return *o.CreatorEmail
}

// GetCreatorEmailOk returns a tuple with the CreatorEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetCreatorEmailOk() (*nil, bool) {
	if o == nil || IsNil(o.CreatorEmail) {
		return nil, false
	}
	return o.CreatorEmail, true
}

// HasCreatorEmail returns a boolean if a field has been set.
func (o *ExternalGateDto) HasCreatorEmail() bool {
	if o != nil && !IsNil(o.CreatorEmail) {
		return true
	}

	return false
}

// SetCreatorEmail gets a reference to the given nil and assigns it to the CreatorEmail field.
func (o *ExternalGateDto) SetCreatorEmail(v nil) {
	o.CreatorEmail = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ExternalGateDto) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ExternalGateDto) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ExternalGateDto) SetTags(v []string) {
	o.Tags = v
}

// GetTargetApps returns the TargetApps field value if set, zero value otherwise.
func (o *ExternalGateDto) GetTargetApps() DynamicConfigDtoTargetApps {
	if o == nil || IsNil(o.TargetApps) {
		var ret DynamicConfigDtoTargetApps
		return ret
	}
	return *o.TargetApps
}

// GetTargetAppsOk returns a tuple with the TargetApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetTargetAppsOk() (*DynamicConfigDtoTargetApps, bool) {
	if o == nil || IsNil(o.TargetApps) {
		return nil, false
	}
	return o.TargetApps, true
}

// HasTargetApps returns a boolean if a field has been set.
func (o *ExternalGateDto) HasTargetApps() bool {
	if o != nil && !IsNil(o.TargetApps) {
		return true
	}

	return false
}

// SetTargetApps gets a reference to the given DynamicConfigDtoTargetApps and assigns it to the TargetApps field.
func (o *ExternalGateDto) SetTargetApps(v DynamicConfigDtoTargetApps) {
	o.TargetApps = &v
}

// GetHoldoutIDs returns the HoldoutIDs field value if set, zero value otherwise.
func (o *ExternalGateDto) GetHoldoutIDs() []string {
	if o == nil || IsNil(o.HoldoutIDs) {
		var ret []string
		return ret
	}
	return o.HoldoutIDs
}

// GetHoldoutIDsOk returns a tuple with the HoldoutIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetHoldoutIDsOk() ([]string, bool) {
	if o == nil || IsNil(o.HoldoutIDs) {
		return nil, false
	}
	return o.HoldoutIDs, true
}

// HasHoldoutIDs returns a boolean if a field has been set.
func (o *ExternalGateDto) HasHoldoutIDs() bool {
	if o != nil && !IsNil(o.HoldoutIDs) {
		return true
	}

	return false
}

// SetHoldoutIDs gets a reference to the given []string and assigns it to the HoldoutIDs field.
func (o *ExternalGateDto) SetHoldoutIDs(v []string) {
	o.HoldoutIDs = v
}

// GetTeam returns the Team field value if set, zero value otherwise.
func (o *ExternalGateDto) GetTeam() nil {
	if o == nil || IsNil(o.Team) {
		var ret nil
		return ret
	}
	return *o.Team
}

// GetTeamOk returns a tuple with the Team field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetTeamOk() (*nil, bool) {
	if o == nil || IsNil(o.Team) {
		return nil, false
	}
	return o.Team, true
}

// HasTeam returns a boolean if a field has been set.
func (o *ExternalGateDto) HasTeam() bool {
	if o != nil && !IsNil(o.Team) {
		return true
	}

	return false
}

// SetTeam gets a reference to the given nil and assigns it to the Team field.
func (o *ExternalGateDto) SetTeam(v nil) {
	o.Team = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ExternalGateDto) GetVersion() float32 {
	if o == nil || IsNil(o.Version) {
		var ret float32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetVersionOk() (*float32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ExternalGateDto) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given float32 and assigns it to the Version field.
func (o *ExternalGateDto) SetVersion(v float32) {
	o.Version = &v
}

// GetChecksPerHour returns the ChecksPerHour field value
func (o *ExternalGateDto) GetChecksPerHour() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.ChecksPerHour
}

// GetChecksPerHourOk returns a tuple with the ChecksPerHour field value
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetChecksPerHourOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChecksPerHour, true
}

// SetChecksPerHour sets field value
func (o *ExternalGateDto) SetChecksPerHour(v nil) {
	o.ChecksPerHour = v
}

// GetStatus returns the Status field value
func (o *ExternalGateDto) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ExternalGateDto) SetStatus(v string) {
	o.Status = v
}

// GetType returns the Type field value
func (o *ExternalGateDto) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ExternalGateDto) SetType(v string) {
	o.Type = v
}

// GetTypeReason returns the TypeReason field value
func (o *ExternalGateDto) GetTypeReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TypeReason
}

// GetTypeReasonOk returns a tuple with the TypeReason field value
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetTypeReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeReason, true
}

// SetTypeReason sets field value
func (o *ExternalGateDto) SetTypeReason(v string) {
	o.TypeReason = v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *ExternalGateDto) GetOwner() nil {
	if o == nil || IsNil(o.Owner) {
		var ret nil
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetOwnerOk() (*nil, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *ExternalGateDto) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given nil and assigns it to the Owner field.
func (o *ExternalGateDto) SetOwner(v nil) {
	o.Owner = &v
}

// GetIsEnabled returns the IsEnabled field value
func (o *ExternalGateDto) GetIsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetIsEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *ExternalGateDto) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetRules returns the Rules field value
func (o *ExternalGateDto) GetRules() []ExternalGateDtoRulesInner {
	if o == nil {
		var ret []ExternalGateDtoRulesInner
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetRulesOk() ([]ExternalGateDtoRulesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rules, true
}

// SetRules sets field value
func (o *ExternalGateDto) SetRules(v []ExternalGateDtoRulesInner) {
	o.Rules = v
}

// GetMeasureMetricLifts returns the MeasureMetricLifts field value if set, zero value otherwise.
func (o *ExternalGateDto) GetMeasureMetricLifts() bool {
	if o == nil || IsNil(o.MeasureMetricLifts) {
		var ret bool
		return ret
	}
	return *o.MeasureMetricLifts
}

// GetMeasureMetricLiftsOk returns a tuple with the MeasureMetricLifts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetMeasureMetricLiftsOk() (*bool, bool) {
	if o == nil || IsNil(o.MeasureMetricLifts) {
		return nil, false
	}
	return o.MeasureMetricLifts, true
}

// HasMeasureMetricLifts returns a boolean if a field has been set.
func (o *ExternalGateDto) HasMeasureMetricLifts() bool {
	if o != nil && !IsNil(o.MeasureMetricLifts) {
		return true
	}

	return false
}

// SetMeasureMetricLifts gets a reference to the given bool and assigns it to the MeasureMetricLifts field.
func (o *ExternalGateDto) SetMeasureMetricLifts(v bool) {
	o.MeasureMetricLifts = &v
}

// GetMonitoringMetrics returns the MonitoringMetrics field value if set, zero value otherwise.
func (o *ExternalGateDto) GetMonitoringMetrics() []ExternalGateDtoMonitoringMetricsInner {
	if o == nil || IsNil(o.MonitoringMetrics) {
		var ret []ExternalGateDtoMonitoringMetricsInner
		return ret
	}
	return o.MonitoringMetrics
}

// GetMonitoringMetricsOk returns a tuple with the MonitoringMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetMonitoringMetricsOk() ([]ExternalGateDtoMonitoringMetricsInner, bool) {
	if o == nil || IsNil(o.MonitoringMetrics) {
		return nil, false
	}
	return o.MonitoringMetrics, true
}

// HasMonitoringMetrics returns a boolean if a field has been set.
func (o *ExternalGateDto) HasMonitoringMetrics() bool {
	if o != nil && !IsNil(o.MonitoringMetrics) {
		return true
	}

	return false
}

// SetMonitoringMetrics gets a reference to the given []ExternalGateDtoMonitoringMetricsInner and assigns it to the MonitoringMetrics field.
func (o *ExternalGateDto) SetMonitoringMetrics(v []ExternalGateDtoMonitoringMetricsInner) {
	o.MonitoringMetrics = v
}

// GetReviewSettings returns the ReviewSettings field value if set, zero value otherwise.
func (o *ExternalGateDto) GetReviewSettings() ExternalGateDtoReviewSettings {
	if o == nil || IsNil(o.ReviewSettings) {
		var ret ExternalGateDtoReviewSettings
		return ret
	}
	return *o.ReviewSettings
}

// GetReviewSettingsOk returns a tuple with the ReviewSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetReviewSettingsOk() (*ExternalGateDtoReviewSettings, bool) {
	if o == nil || IsNil(o.ReviewSettings) {
		return nil, false
	}
	return o.ReviewSettings, true
}

// HasReviewSettings returns a boolean if a field has been set.
func (o *ExternalGateDto) HasReviewSettings() bool {
	if o != nil && !IsNil(o.ReviewSettings) {
		return true
	}

	return false
}

// SetReviewSettings gets a reference to the given ExternalGateDtoReviewSettings and assigns it to the ReviewSettings field.
func (o *ExternalGateDto) SetReviewSettings(v ExternalGateDtoReviewSettings) {
	o.ReviewSettings = &v
}

// GetActiveReview returns the ActiveReview field value if set, zero value otherwise.
func (o *ExternalGateDto) GetActiveReview() ExternalGateDtoActiveReview {
	if o == nil || IsNil(o.ActiveReview) {
		var ret ExternalGateDtoActiveReview
		return ret
	}
	return *o.ActiveReview
}

// GetActiveReviewOk returns a tuple with the ActiveReview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGateDto) GetActiveReviewOk() (*ExternalGateDtoActiveReview, bool) {
	if o == nil || IsNil(o.ActiveReview) {
		return nil, false
	}
	return o.ActiveReview, true
}

// HasActiveReview returns a boolean if a field has been set.
func (o *ExternalGateDto) HasActiveReview() bool {
	if o != nil && !IsNil(o.ActiveReview) {
		return true
	}

	return false
}

// SetActiveReview gets a reference to the given ExternalGateDtoActiveReview and assigns it to the ActiveReview field.
func (o *ExternalGateDto) SetActiveReview(v ExternalGateDtoActiveReview) {
	o.ActiveReview = &v
}

func (o ExternalGateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalGateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.IdType) {
		toSerialize["idType"] = o.IdType
	}
	toSerialize["description"] = o.Description
	toSerialize["lastModifierID"] = o.LastModifierID
	toSerialize["lastModifiedTime"] = o.LastModifiedTime
	toSerialize["lastModifierEmail"] = o.LastModifierEmail
	toSerialize["lastModifierName"] = o.LastModifierName
	if !IsNil(o.CreatorID) {
		toSerialize["creatorID"] = o.CreatorID
	}
	toSerialize["createdTime"] = o.CreatedTime
	toSerialize["creatorName"] = o.CreatorName
	if !IsNil(o.CreatorEmail) {
		toSerialize["creatorEmail"] = o.CreatorEmail
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.TargetApps) {
		toSerialize["targetApps"] = o.TargetApps
	}
	if !IsNil(o.HoldoutIDs) {
		toSerialize["holdoutIDs"] = o.HoldoutIDs
	}
	if !IsNil(o.Team) {
		toSerialize["team"] = o.Team
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	toSerialize["checksPerHour"] = o.ChecksPerHour
	toSerialize["status"] = o.Status
	toSerialize["type"] = o.Type
	toSerialize["typeReason"] = o.TypeReason
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	toSerialize["isEnabled"] = o.IsEnabled
	toSerialize["rules"] = o.Rules
	if !IsNil(o.MeasureMetricLifts) {
		toSerialize["measureMetricLifts"] = o.MeasureMetricLifts
	}
	if !IsNil(o.MonitoringMetrics) {
		toSerialize["monitoringMetrics"] = o.MonitoringMetrics
	}
	if !IsNil(o.ReviewSettings) {
		toSerialize["reviewSettings"] = o.ReviewSettings
	}
	if !IsNil(o.ActiveReview) {
		toSerialize["activeReview"] = o.ActiveReview
	}
	return toSerialize, nil
}

func (o *ExternalGateDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"description",
		"lastModifierID",
		"lastModifiedTime",
		"lastModifierEmail",
		"lastModifierName",
		"createdTime",
		"creatorName",
		"checksPerHour",
		"status",
		"type",
		"typeReason",
		"isEnabled",
		"rules",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalGateDto := _ExternalGateDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalGateDto)

	if err != nil {
		return err
	}

	*o = ExternalGateDto(varExternalGateDto)

	return err
}

type NullableExternalGateDto struct {
	value *ExternalGateDto
	isSet bool
}

func (v NullableExternalGateDto) Get() *ExternalGateDto {
	return v.value
}

func (v *NullableExternalGateDto) Set(val *ExternalGateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalGateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalGateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalGateDto(val *ExternalGateDto) *NullableExternalGateDto {
	return &NullableExternalGateDto{value: val, isSet: true}
}

func (v NullableExternalGateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalGateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


