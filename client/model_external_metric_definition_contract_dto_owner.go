/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExternalMetricDefinitionContractDtoOwner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalMetricDefinitionContractDtoOwner{}

// ExternalMetricDefinitionContractDtoOwner struct for ExternalMetricDefinitionContractDtoOwner
type ExternalMetricDefinitionContractDtoOwner struct {
	// Name of the owner responsible for the metricâ€™s management.
	Name string `json:"name"`
}

type _ExternalMetricDefinitionContractDtoOwner ExternalMetricDefinitionContractDtoOwner

// NewExternalMetricDefinitionContractDtoOwner instantiates a new ExternalMetricDefinitionContractDtoOwner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalMetricDefinitionContractDtoOwner(name string) *ExternalMetricDefinitionContractDtoOwner {
	this := ExternalMetricDefinitionContractDtoOwner{}
	this.Name = name
	return &this
}

// NewExternalMetricDefinitionContractDtoOwnerWithDefaults instantiates a new ExternalMetricDefinitionContractDtoOwner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalMetricDefinitionContractDtoOwnerWithDefaults() *ExternalMetricDefinitionContractDtoOwner {
	this := ExternalMetricDefinitionContractDtoOwner{}
	return &this
}

// GetName returns the Name field value
func (o *ExternalMetricDefinitionContractDtoOwner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ExternalMetricDefinitionContractDtoOwner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ExternalMetricDefinitionContractDtoOwner) SetName(v string) {
	o.Name = v
}

func (o ExternalMetricDefinitionContractDtoOwner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalMetricDefinitionContractDtoOwner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *ExternalMetricDefinitionContractDtoOwner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalMetricDefinitionContractDtoOwner := _ExternalMetricDefinitionContractDtoOwner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalMetricDefinitionContractDtoOwner)

	if err != nil {
		return err
	}

	*o = ExternalMetricDefinitionContractDtoOwner(varExternalMetricDefinitionContractDtoOwner)

	return err
}

type NullableExternalMetricDefinitionContractDtoOwner struct {
	value *ExternalMetricDefinitionContractDtoOwner
	isSet bool
}

func (v NullableExternalMetricDefinitionContractDtoOwner) Get() *ExternalMetricDefinitionContractDtoOwner {
	return v.value
}

func (v *NullableExternalMetricDefinitionContractDtoOwner) Set(val *ExternalMetricDefinitionContractDtoOwner) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalMetricDefinitionContractDtoOwner) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalMetricDefinitionContractDtoOwner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalMetricDefinitionContractDtoOwner(val *ExternalMetricDefinitionContractDtoOwner) *NullableExternalMetricDefinitionContractDtoOwner {
	return &NullableExternalMetricDefinitionContractDtoOwner{value: val, isSet: true}
}

func (v NullableExternalMetricDefinitionContractDtoOwner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalMetricDefinitionContractDtoOwner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


