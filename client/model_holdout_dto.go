/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HoldoutDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HoldoutDto{}

// HoldoutDto struct for HoldoutDto
type HoldoutDto struct {
	// ID
	Id string `json:"id"`
	// Optional name for the configuration.
	Name *string `json:"name,omitempty"`
	// type of id
	IdType string `json:"idType"`
	// brief summary of what the holdout is being used for
	Description string `json:"description"`
	// ID of the last modifier.
	LastModifierID nil `json:"lastModifierID"`
	// Time of the last modification.
	LastModifiedTime nil `json:"lastModifiedTime"`
	// Email of the last modifier.
	LastModifierEmail nil `json:"lastModifierEmail"`
	// Name of the last modifier.
	LastModifierName nil `json:"lastModifierName"`
	// ID of the user who created the entity.
	CreatorID nil `json:"creatorID"`
	// Timestamp when the entity was created.
	CreatedTime float32 `json:"createdTime"`
	// Name of the creator.
	CreatorName nil `json:"creatorName"`
	// Email of the creator.
	CreatorEmail nil `json:"creatorEmail"`
	// Optional tags for categorization.
	Tags []string `json:"tags,omitempty"`
	// List of target applications associated with this configuration.
	TargetApps []string `json:"targetApps,omitempty"`
	// Holdouts applied to this configuration.
	HoldoutIDs []string `json:"holdoutIDs,omitempty"`
	// Optional identifier for the responsible team.
	Team *nil `json:"team,omitempty"`
	// Version number
	Version *float32 `json:"version,omitempty"`
	// enable or disable the holdout
	IsEnabled bool `json:"isEnabled"`
	// percentage of users between 0-10% to pass through the holdout
	PassPercentage float32 `json:"passPercentage"`
	// an array of gateIDs which this holdout is applied to
	GateIDs []string `json:"gateIDs"`
	// an array of experimentIDs which this holdout is applied to
	ExperimentIDs []string `json:"experimentIDs"`
	// an array of layerIDs which this holdout is applied to
	LayerIDs []string `json:"layerIDs"`
	// whether the holdout is being applied to all new gates
	IsGlobal bool `json:"isGlobal"`
	// the gateID that the holdout is targeting
	TargetingGateID nil `json:"targetingGateID"`
}

type _HoldoutDto HoldoutDto

// NewHoldoutDto instantiates a new HoldoutDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHoldoutDto(id string, idType string, description string, lastModifierID nil, lastModifiedTime nil, lastModifierEmail nil, lastModifierName nil, creatorID nil, createdTime float32, creatorName nil, creatorEmail nil, isEnabled bool, passPercentage float32, gateIDs []string, experimentIDs []string, layerIDs []string, isGlobal bool, targetingGateID nil) *HoldoutDto {
	this := HoldoutDto{}
	this.Id = id
	this.IdType = idType
	this.Description = description
	this.LastModifierID = lastModifierID
	this.LastModifiedTime = lastModifiedTime
	this.LastModifierEmail = lastModifierEmail
	this.LastModifierName = lastModifierName
	this.CreatorID = creatorID
	this.CreatedTime = createdTime
	this.CreatorName = creatorName
	this.CreatorEmail = creatorEmail
	this.IsEnabled = isEnabled
	this.PassPercentage = passPercentage
	this.GateIDs = gateIDs
	this.ExperimentIDs = experimentIDs
	this.LayerIDs = layerIDs
	this.IsGlobal = isGlobal
	this.TargetingGateID = targetingGateID
	return &this
}

// NewHoldoutDtoWithDefaults instantiates a new HoldoutDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHoldoutDtoWithDefaults() *HoldoutDto {
	this := HoldoutDto{}
	return &this
}

// GetId returns the Id field value
func (o *HoldoutDto) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *HoldoutDto) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HoldoutDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HoldoutDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HoldoutDto) SetName(v string) {
	o.Name = &v
}

// GetIdType returns the IdType field value
func (o *HoldoutDto) GetIdType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdType
}

// GetIdTypeOk returns a tuple with the IdType field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetIdTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdType, true
}

// SetIdType sets field value
func (o *HoldoutDto) SetIdType(v string) {
	o.IdType = v
}

// GetDescription returns the Description field value
func (o *HoldoutDto) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *HoldoutDto) SetDescription(v string) {
	o.Description = v
}

// GetLastModifierID returns the LastModifierID field value
func (o *HoldoutDto) GetLastModifierID() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.LastModifierID
}

// GetLastModifierIDOk returns a tuple with the LastModifierID field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetLastModifierIDOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifierID, true
}

// SetLastModifierID sets field value
func (o *HoldoutDto) SetLastModifierID(v nil) {
	o.LastModifierID = v
}

// GetLastModifiedTime returns the LastModifiedTime field value
func (o *HoldoutDto) GetLastModifiedTime() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetLastModifiedTimeOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifiedTime, true
}

// SetLastModifiedTime sets field value
func (o *HoldoutDto) SetLastModifiedTime(v nil) {
	o.LastModifiedTime = v
}

// GetLastModifierEmail returns the LastModifierEmail field value
func (o *HoldoutDto) GetLastModifierEmail() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.LastModifierEmail
}

// GetLastModifierEmailOk returns a tuple with the LastModifierEmail field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetLastModifierEmailOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifierEmail, true
}

// SetLastModifierEmail sets field value
func (o *HoldoutDto) SetLastModifierEmail(v nil) {
	o.LastModifierEmail = v
}

// GetLastModifierName returns the LastModifierName field value
func (o *HoldoutDto) GetLastModifierName() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.LastModifierName
}

// GetLastModifierNameOk returns a tuple with the LastModifierName field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetLastModifierNameOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifierName, true
}

// SetLastModifierName sets field value
func (o *HoldoutDto) SetLastModifierName(v nil) {
	o.LastModifierName = v
}

// GetCreatorID returns the CreatorID field value
func (o *HoldoutDto) GetCreatorID() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.CreatorID
}

// GetCreatorIDOk returns a tuple with the CreatorID field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetCreatorIDOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorID, true
}

// SetCreatorID sets field value
func (o *HoldoutDto) SetCreatorID(v nil) {
	o.CreatorID = v
}

// GetCreatedTime returns the CreatedTime field value
func (o *HoldoutDto) GetCreatedTime() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetCreatedTimeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *HoldoutDto) SetCreatedTime(v float32) {
	o.CreatedTime = v
}

// GetCreatorName returns the CreatorName field value
func (o *HoldoutDto) GetCreatorName() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.CreatorName
}

// GetCreatorNameOk returns a tuple with the CreatorName field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetCreatorNameOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorName, true
}

// SetCreatorName sets field value
func (o *HoldoutDto) SetCreatorName(v nil) {
	o.CreatorName = v
}

// GetCreatorEmail returns the CreatorEmail field value
func (o *HoldoutDto) GetCreatorEmail() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.CreatorEmail
}

// GetCreatorEmailOk returns a tuple with the CreatorEmail field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetCreatorEmailOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorEmail, true
}

// SetCreatorEmail sets field value
func (o *HoldoutDto) SetCreatorEmail(v nil) {
	o.CreatorEmail = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *HoldoutDto) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *HoldoutDto) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *HoldoutDto) SetTags(v []string) {
	o.Tags = v
}

// GetTargetApps returns the TargetApps field value if set, zero value otherwise.
func (o *HoldoutDto) GetTargetApps() []string {
	if o == nil || IsNil(o.TargetApps) {
		var ret []string
		return ret
	}
	return o.TargetApps
}

// GetTargetAppsOk returns a tuple with the TargetApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetTargetAppsOk() ([]string, bool) {
	if o == nil || IsNil(o.TargetApps) {
		return nil, false
	}
	return o.TargetApps, true
}

// HasTargetApps returns a boolean if a field has been set.
func (o *HoldoutDto) HasTargetApps() bool {
	if o != nil && !IsNil(o.TargetApps) {
		return true
	}

	return false
}

// SetTargetApps gets a reference to the given []string and assigns it to the TargetApps field.
func (o *HoldoutDto) SetTargetApps(v []string) {
	o.TargetApps = v
}

// GetHoldoutIDs returns the HoldoutIDs field value if set, zero value otherwise.
func (o *HoldoutDto) GetHoldoutIDs() []string {
	if o == nil || IsNil(o.HoldoutIDs) {
		var ret []string
		return ret
	}
	return o.HoldoutIDs
}

// GetHoldoutIDsOk returns a tuple with the HoldoutIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetHoldoutIDsOk() ([]string, bool) {
	if o == nil || IsNil(o.HoldoutIDs) {
		return nil, false
	}
	return o.HoldoutIDs, true
}

// HasHoldoutIDs returns a boolean if a field has been set.
func (o *HoldoutDto) HasHoldoutIDs() bool {
	if o != nil && !IsNil(o.HoldoutIDs) {
		return true
	}

	return false
}

// SetHoldoutIDs gets a reference to the given []string and assigns it to the HoldoutIDs field.
func (o *HoldoutDto) SetHoldoutIDs(v []string) {
	o.HoldoutIDs = v
}

// GetTeam returns the Team field value if set, zero value otherwise.
func (o *HoldoutDto) GetTeam() nil {
	if o == nil || IsNil(o.Team) {
		var ret nil
		return ret
	}
	return *o.Team
}

// GetTeamOk returns a tuple with the Team field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetTeamOk() (*nil, bool) {
	if o == nil || IsNil(o.Team) {
		return nil, false
	}
	return o.Team, true
}

// HasTeam returns a boolean if a field has been set.
func (o *HoldoutDto) HasTeam() bool {
	if o != nil && !IsNil(o.Team) {
		return true
	}

	return false
}

// SetTeam gets a reference to the given nil and assigns it to the Team field.
func (o *HoldoutDto) SetTeam(v nil) {
	o.Team = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *HoldoutDto) GetVersion() float32 {
	if o == nil || IsNil(o.Version) {
		var ret float32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetVersionOk() (*float32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *HoldoutDto) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given float32 and assigns it to the Version field.
func (o *HoldoutDto) SetVersion(v float32) {
	o.Version = &v
}

// GetIsEnabled returns the IsEnabled field value
func (o *HoldoutDto) GetIsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetIsEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *HoldoutDto) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetPassPercentage returns the PassPercentage field value
func (o *HoldoutDto) GetPassPercentage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PassPercentage
}

// GetPassPercentageOk returns a tuple with the PassPercentage field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetPassPercentageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PassPercentage, true
}

// SetPassPercentage sets field value
func (o *HoldoutDto) SetPassPercentage(v float32) {
	o.PassPercentage = v
}

// GetGateIDs returns the GateIDs field value
func (o *HoldoutDto) GetGateIDs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.GateIDs
}

// GetGateIDsOk returns a tuple with the GateIDs field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetGateIDsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GateIDs, true
}

// SetGateIDs sets field value
func (o *HoldoutDto) SetGateIDs(v []string) {
	o.GateIDs = v
}

// GetExperimentIDs returns the ExperimentIDs field value
func (o *HoldoutDto) GetExperimentIDs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ExperimentIDs
}

// GetExperimentIDsOk returns a tuple with the ExperimentIDs field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetExperimentIDsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExperimentIDs, true
}

// SetExperimentIDs sets field value
func (o *HoldoutDto) SetExperimentIDs(v []string) {
	o.ExperimentIDs = v
}

// GetLayerIDs returns the LayerIDs field value
func (o *HoldoutDto) GetLayerIDs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.LayerIDs
}

// GetLayerIDsOk returns a tuple with the LayerIDs field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetLayerIDsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LayerIDs, true
}

// SetLayerIDs sets field value
func (o *HoldoutDto) SetLayerIDs(v []string) {
	o.LayerIDs = v
}

// GetIsGlobal returns the IsGlobal field value
func (o *HoldoutDto) GetIsGlobal() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsGlobal
}

// GetIsGlobalOk returns a tuple with the IsGlobal field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetIsGlobalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsGlobal, true
}

// SetIsGlobal sets field value
func (o *HoldoutDto) SetIsGlobal(v bool) {
	o.IsGlobal = v
}

// GetTargetingGateID returns the TargetingGateID field value
func (o *HoldoutDto) GetTargetingGateID() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.TargetingGateID
}

// GetTargetingGateIDOk returns a tuple with the TargetingGateID field value
// and a boolean to check if the value has been set.
func (o *HoldoutDto) GetTargetingGateIDOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetingGateID, true
}

// SetTargetingGateID sets field value
func (o *HoldoutDto) SetTargetingGateID(v nil) {
	o.TargetingGateID = v
}

func (o HoldoutDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HoldoutDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["idType"] = o.IdType
	toSerialize["description"] = o.Description
	toSerialize["lastModifierID"] = o.LastModifierID
	toSerialize["lastModifiedTime"] = o.LastModifiedTime
	toSerialize["lastModifierEmail"] = o.LastModifierEmail
	toSerialize["lastModifierName"] = o.LastModifierName
	toSerialize["creatorID"] = o.CreatorID
	toSerialize["createdTime"] = o.CreatedTime
	toSerialize["creatorName"] = o.CreatorName
	toSerialize["creatorEmail"] = o.CreatorEmail
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.TargetApps) {
		toSerialize["targetApps"] = o.TargetApps
	}
	if !IsNil(o.HoldoutIDs) {
		toSerialize["holdoutIDs"] = o.HoldoutIDs
	}
	if !IsNil(o.Team) {
		toSerialize["team"] = o.Team
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	toSerialize["isEnabled"] = o.IsEnabled
	toSerialize["passPercentage"] = o.PassPercentage
	toSerialize["gateIDs"] = o.GateIDs
	toSerialize["experimentIDs"] = o.ExperimentIDs
	toSerialize["layerIDs"] = o.LayerIDs
	toSerialize["isGlobal"] = o.IsGlobal
	toSerialize["targetingGateID"] = o.TargetingGateID
	return toSerialize, nil
}

func (o *HoldoutDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"idType",
		"description",
		"lastModifierID",
		"lastModifiedTime",
		"lastModifierEmail",
		"lastModifierName",
		"creatorID",
		"createdTime",
		"creatorName",
		"creatorEmail",
		"isEnabled",
		"passPercentage",
		"gateIDs",
		"experimentIDs",
		"layerIDs",
		"isGlobal",
		"targetingGateID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHoldoutDto := _HoldoutDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHoldoutDto)

	if err != nil {
		return err
	}

	*o = HoldoutDto(varHoldoutDto)

	return err
}

type NullableHoldoutDto struct {
	value *HoldoutDto
	isSet bool
}

func (v NullableHoldoutDto) Get() *HoldoutDto {
	return v.value
}

func (v *NullableHoldoutDto) Set(val *HoldoutDto) {
	v.value = val
	v.isSet = true
}

func (v NullableHoldoutDto) IsSet() bool {
	return v.isSet
}

func (v *NullableHoldoutDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHoldoutDto(val *HoldoutDto) *NullableHoldoutDto {
	return &NullableHoldoutDto{value: val, isSet: true}
}

func (v NullableHoldoutDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHoldoutDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


