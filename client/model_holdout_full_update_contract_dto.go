/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HoldoutFullUpdateContractDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HoldoutFullUpdateContractDto{}

// HoldoutFullUpdateContractDto struct for HoldoutFullUpdateContractDto
type HoldoutFullUpdateContractDto struct {
	// enable or disable the holdout
	IsEnabled bool `json:"isEnabled"`
	// brief summary of what the holdout is being used for
	Description string `json:"description"`
	// percentage of users between 0-10% to pass through the holdout
	PassPercentage float32 `json:"passPercentage"`
	// an array of gateIDs which this holdout is applied to
	GateIDs []string `json:"gateIDs"`
	// an array of experimentIDs which this holdout is applied to
	ExperimentIDs []string `json:"experimentIDs"`
	// an array of layerIDs which this holdout is applied to
	LayerIDs []string `json:"layerIDs"`
	// whether the holdout is being applied to all new gates
	IsGlobal bool `json:"isGlobal"`
	// the gateID that the holdout is targeting
	TargetingGateID nil `json:"targetingGateID"`
}

type _HoldoutFullUpdateContractDto HoldoutFullUpdateContractDto

// NewHoldoutFullUpdateContractDto instantiates a new HoldoutFullUpdateContractDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHoldoutFullUpdateContractDto(isEnabled bool, description string, passPercentage float32, gateIDs []string, experimentIDs []string, layerIDs []string, isGlobal bool, targetingGateID nil) *HoldoutFullUpdateContractDto {
	this := HoldoutFullUpdateContractDto{}
	this.IsEnabled = isEnabled
	this.Description = description
	this.PassPercentage = passPercentage
	this.GateIDs = gateIDs
	this.ExperimentIDs = experimentIDs
	this.LayerIDs = layerIDs
	this.IsGlobal = isGlobal
	this.TargetingGateID = targetingGateID
	return &this
}

// NewHoldoutFullUpdateContractDtoWithDefaults instantiates a new HoldoutFullUpdateContractDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHoldoutFullUpdateContractDtoWithDefaults() *HoldoutFullUpdateContractDto {
	this := HoldoutFullUpdateContractDto{}
	return &this
}

// GetIsEnabled returns the IsEnabled field value
func (o *HoldoutFullUpdateContractDto) GetIsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *HoldoutFullUpdateContractDto) GetIsEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *HoldoutFullUpdateContractDto) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetDescription returns the Description field value
func (o *HoldoutFullUpdateContractDto) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *HoldoutFullUpdateContractDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *HoldoutFullUpdateContractDto) SetDescription(v string) {
	o.Description = v
}

// GetPassPercentage returns the PassPercentage field value
func (o *HoldoutFullUpdateContractDto) GetPassPercentage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PassPercentage
}

// GetPassPercentageOk returns a tuple with the PassPercentage field value
// and a boolean to check if the value has been set.
func (o *HoldoutFullUpdateContractDto) GetPassPercentageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PassPercentage, true
}

// SetPassPercentage sets field value
func (o *HoldoutFullUpdateContractDto) SetPassPercentage(v float32) {
	o.PassPercentage = v
}

// GetGateIDs returns the GateIDs field value
func (o *HoldoutFullUpdateContractDto) GetGateIDs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.GateIDs
}

// GetGateIDsOk returns a tuple with the GateIDs field value
// and a boolean to check if the value has been set.
func (o *HoldoutFullUpdateContractDto) GetGateIDsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GateIDs, true
}

// SetGateIDs sets field value
func (o *HoldoutFullUpdateContractDto) SetGateIDs(v []string) {
	o.GateIDs = v
}

// GetExperimentIDs returns the ExperimentIDs field value
func (o *HoldoutFullUpdateContractDto) GetExperimentIDs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ExperimentIDs
}

// GetExperimentIDsOk returns a tuple with the ExperimentIDs field value
// and a boolean to check if the value has been set.
func (o *HoldoutFullUpdateContractDto) GetExperimentIDsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExperimentIDs, true
}

// SetExperimentIDs sets field value
func (o *HoldoutFullUpdateContractDto) SetExperimentIDs(v []string) {
	o.ExperimentIDs = v
}

// GetLayerIDs returns the LayerIDs field value
func (o *HoldoutFullUpdateContractDto) GetLayerIDs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.LayerIDs
}

// GetLayerIDsOk returns a tuple with the LayerIDs field value
// and a boolean to check if the value has been set.
func (o *HoldoutFullUpdateContractDto) GetLayerIDsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LayerIDs, true
}

// SetLayerIDs sets field value
func (o *HoldoutFullUpdateContractDto) SetLayerIDs(v []string) {
	o.LayerIDs = v
}

// GetIsGlobal returns the IsGlobal field value
func (o *HoldoutFullUpdateContractDto) GetIsGlobal() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsGlobal
}

// GetIsGlobalOk returns a tuple with the IsGlobal field value
// and a boolean to check if the value has been set.
func (o *HoldoutFullUpdateContractDto) GetIsGlobalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsGlobal, true
}

// SetIsGlobal sets field value
func (o *HoldoutFullUpdateContractDto) SetIsGlobal(v bool) {
	o.IsGlobal = v
}

// GetTargetingGateID returns the TargetingGateID field value
func (o *HoldoutFullUpdateContractDto) GetTargetingGateID() nil {
	if o == nil {
		var ret nil
		return ret
	}

	return o.TargetingGateID
}

// GetTargetingGateIDOk returns a tuple with the TargetingGateID field value
// and a boolean to check if the value has been set.
func (o *HoldoutFullUpdateContractDto) GetTargetingGateIDOk() (*nil, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetingGateID, true
}

// SetTargetingGateID sets field value
func (o *HoldoutFullUpdateContractDto) SetTargetingGateID(v nil) {
	o.TargetingGateID = v
}

func (o HoldoutFullUpdateContractDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HoldoutFullUpdateContractDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["isEnabled"] = o.IsEnabled
	toSerialize["description"] = o.Description
	toSerialize["passPercentage"] = o.PassPercentage
	toSerialize["gateIDs"] = o.GateIDs
	toSerialize["experimentIDs"] = o.ExperimentIDs
	toSerialize["layerIDs"] = o.LayerIDs
	toSerialize["isGlobal"] = o.IsGlobal
	toSerialize["targetingGateID"] = o.TargetingGateID
	return toSerialize, nil
}

func (o *HoldoutFullUpdateContractDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"isEnabled",
		"description",
		"passPercentage",
		"gateIDs",
		"experimentIDs",
		"layerIDs",
		"isGlobal",
		"targetingGateID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHoldoutFullUpdateContractDto := _HoldoutFullUpdateContractDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHoldoutFullUpdateContractDto)

	if err != nil {
		return err
	}

	*o = HoldoutFullUpdateContractDto(varHoldoutFullUpdateContractDto)

	return err
}

type NullableHoldoutFullUpdateContractDto struct {
	value *HoldoutFullUpdateContractDto
	isSet bool
}

func (v NullableHoldoutFullUpdateContractDto) Get() *HoldoutFullUpdateContractDto {
	return v.value
}

func (v *NullableHoldoutFullUpdateContractDto) Set(val *HoldoutFullUpdateContractDto) {
	v.value = val
	v.isSet = true
}

func (v NullableHoldoutFullUpdateContractDto) IsSet() bool {
	return v.isSet
}

func (v *NullableHoldoutFullUpdateContractDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHoldoutFullUpdateContractDto(val *HoldoutFullUpdateContractDto) *NullableHoldoutFullUpdateContractDto {
	return &NullableHoldoutFullUpdateContractDto{value: val, isSet: true}
}

func (v NullableHoldoutFullUpdateContractDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHoldoutFullUpdateContractDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


