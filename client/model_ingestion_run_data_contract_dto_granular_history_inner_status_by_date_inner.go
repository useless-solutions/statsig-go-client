/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner{}

// IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner struct for IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner
type IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner struct {
	DateStamp string `json:"dateStamp"`
	Statuses []IngestionRunDataContractDtoRunHistoryInner `json:"statuses"`
}

type _IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner

// NewIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner instantiates a new IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner(dateStamp string, statuses []IngestionRunDataContractDtoRunHistoryInner) *IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner {
	this := IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner{}
	this.DateStamp = dateStamp
	this.Statuses = statuses
	return &this
}

// NewIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInnerWithDefaults instantiates a new IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInnerWithDefaults() *IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner {
	this := IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner{}
	return &this
}

// GetDateStamp returns the DateStamp field value
func (o *IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) GetDateStamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateStamp
}

// GetDateStampOk returns a tuple with the DateStamp field value
// and a boolean to check if the value has been set.
func (o *IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) GetDateStampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateStamp, true
}

// SetDateStamp sets field value
func (o *IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) SetDateStamp(v string) {
	o.DateStamp = v
}

// GetStatuses returns the Statuses field value
func (o *IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) GetStatuses() []IngestionRunDataContractDtoRunHistoryInner {
	if o == nil {
		var ret []IngestionRunDataContractDtoRunHistoryInner
		return ret
	}

	return o.Statuses
}

// GetStatusesOk returns a tuple with the Statuses field value
// and a boolean to check if the value has been set.
func (o *IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) GetStatusesOk() ([]IngestionRunDataContractDtoRunHistoryInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Statuses, true
}

// SetStatuses sets field value
func (o *IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) SetStatuses(v []IngestionRunDataContractDtoRunHistoryInner) {
	o.Statuses = v
}

func (o IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dateStamp"] = o.DateStamp
	toSerialize["statuses"] = o.Statuses
	return toSerialize, nil
}

func (o *IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dateStamp",
		"statuses",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner := _IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner)

	if err != nil {
		return err
	}

	*o = IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner(varIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner)

	return err
}

type NullableIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner struct {
	value *IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner
	isSet bool
}

func (v NullableIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) Get() *IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner {
	return v.value
}

func (v *NullableIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) Set(val *IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) {
	v.value = val
	v.isSet = true
}

func (v NullableIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) IsSet() bool {
	return v.isSet
}

func (v *NullableIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner(val *IngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) *NullableIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner {
	return &NullableIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner{value: val, isSet: true}
}

func (v NullableIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngestionRunDataContractDtoGranularHistoryInnerStatusByDateInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


