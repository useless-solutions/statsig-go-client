/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the IngestionRunDataContractDtoRunHistoryInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IngestionRunDataContractDtoRunHistoryInner{}

// IngestionRunDataContractDtoRunHistoryInner struct for IngestionRunDataContractDtoRunHistoryInner
type IngestionRunDataContractDtoRunHistoryInner struct {
	StatusTimestamp time.Time `json:"statusTimestamp"`
	Status string `json:"status"`
}

type _IngestionRunDataContractDtoRunHistoryInner IngestionRunDataContractDtoRunHistoryInner

// NewIngestionRunDataContractDtoRunHistoryInner instantiates a new IngestionRunDataContractDtoRunHistoryInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngestionRunDataContractDtoRunHistoryInner(statusTimestamp time.Time, status string) *IngestionRunDataContractDtoRunHistoryInner {
	this := IngestionRunDataContractDtoRunHistoryInner{}
	this.StatusTimestamp = statusTimestamp
	this.Status = status
	return &this
}

// NewIngestionRunDataContractDtoRunHistoryInnerWithDefaults instantiates a new IngestionRunDataContractDtoRunHistoryInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngestionRunDataContractDtoRunHistoryInnerWithDefaults() *IngestionRunDataContractDtoRunHistoryInner {
	this := IngestionRunDataContractDtoRunHistoryInner{}
	return &this
}

// GetStatusTimestamp returns the StatusTimestamp field value
func (o *IngestionRunDataContractDtoRunHistoryInner) GetStatusTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StatusTimestamp
}

// GetStatusTimestampOk returns a tuple with the StatusTimestamp field value
// and a boolean to check if the value has been set.
func (o *IngestionRunDataContractDtoRunHistoryInner) GetStatusTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusTimestamp, true
}

// SetStatusTimestamp sets field value
func (o *IngestionRunDataContractDtoRunHistoryInner) SetStatusTimestamp(v time.Time) {
	o.StatusTimestamp = v
}

// GetStatus returns the Status field value
func (o *IngestionRunDataContractDtoRunHistoryInner) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *IngestionRunDataContractDtoRunHistoryInner) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *IngestionRunDataContractDtoRunHistoryInner) SetStatus(v string) {
	o.Status = v
}

func (o IngestionRunDataContractDtoRunHistoryInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IngestionRunDataContractDtoRunHistoryInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["statusTimestamp"] = o.StatusTimestamp
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *IngestionRunDataContractDtoRunHistoryInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"statusTimestamp",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIngestionRunDataContractDtoRunHistoryInner := _IngestionRunDataContractDtoRunHistoryInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIngestionRunDataContractDtoRunHistoryInner)

	if err != nil {
		return err
	}

	*o = IngestionRunDataContractDtoRunHistoryInner(varIngestionRunDataContractDtoRunHistoryInner)

	return err
}

type NullableIngestionRunDataContractDtoRunHistoryInner struct {
	value *IngestionRunDataContractDtoRunHistoryInner
	isSet bool
}

func (v NullableIngestionRunDataContractDtoRunHistoryInner) Get() *IngestionRunDataContractDtoRunHistoryInner {
	return v.value
}

func (v *NullableIngestionRunDataContractDtoRunHistoryInner) Set(val *IngestionRunDataContractDtoRunHistoryInner) {
	v.value = val
	v.isSet = true
}

func (v NullableIngestionRunDataContractDtoRunHistoryInner) IsSet() bool {
	return v.isSet
}

func (v *NullableIngestionRunDataContractDtoRunHistoryInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngestionRunDataContractDtoRunHistoryInner(val *IngestionRunDataContractDtoRunHistoryInner) *NullableIngestionRunDataContractDtoRunHistoryInner {
	return &NullableIngestionRunDataContractDtoRunHistoryInner{value: val, isSet: true}
}

func (v NullableIngestionRunDataContractDtoRunHistoryInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngestionRunDataContractDtoRunHistoryInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


