/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LayerFullUpdateContractDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LayerFullUpdateContractDto{}

// LayerFullUpdateContractDto struct for LayerFullUpdateContractDto
type LayerFullUpdateContractDto struct {
	// A detailed description of the layer, explaining its purpose and functionality.
	Description string `json:"description"`
	// An array of parameters associated with the layer, each defining specific attributes.
	Parameters []LayerContractDtoParametersInner `json:"parameters"`
	TargetApps *LayerContractDtoTargetApps `json:"targetApps,omitempty"`
}

type _LayerFullUpdateContractDto LayerFullUpdateContractDto

// NewLayerFullUpdateContractDto instantiates a new LayerFullUpdateContractDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLayerFullUpdateContractDto(description string, parameters []LayerContractDtoParametersInner) *LayerFullUpdateContractDto {
	this := LayerFullUpdateContractDto{}
	this.Description = description
	this.Parameters = parameters
	return &this
}

// NewLayerFullUpdateContractDtoWithDefaults instantiates a new LayerFullUpdateContractDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLayerFullUpdateContractDtoWithDefaults() *LayerFullUpdateContractDto {
	this := LayerFullUpdateContractDto{}
	return &this
}

// GetDescription returns the Description field value
func (o *LayerFullUpdateContractDto) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *LayerFullUpdateContractDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *LayerFullUpdateContractDto) SetDescription(v string) {
	o.Description = v
}

// GetParameters returns the Parameters field value
func (o *LayerFullUpdateContractDto) GetParameters() []LayerContractDtoParametersInner {
	if o == nil {
		var ret []LayerContractDtoParametersInner
		return ret
	}

	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value
// and a boolean to check if the value has been set.
func (o *LayerFullUpdateContractDto) GetParametersOk() ([]LayerContractDtoParametersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Parameters, true
}

// SetParameters sets field value
func (o *LayerFullUpdateContractDto) SetParameters(v []LayerContractDtoParametersInner) {
	o.Parameters = v
}

// GetTargetApps returns the TargetApps field value if set, zero value otherwise.
func (o *LayerFullUpdateContractDto) GetTargetApps() LayerContractDtoTargetApps {
	if o == nil || IsNil(o.TargetApps) {
		var ret LayerContractDtoTargetApps
		return ret
	}
	return *o.TargetApps
}

// GetTargetAppsOk returns a tuple with the TargetApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LayerFullUpdateContractDto) GetTargetAppsOk() (*LayerContractDtoTargetApps, bool) {
	if o == nil || IsNil(o.TargetApps) {
		return nil, false
	}
	return o.TargetApps, true
}

// HasTargetApps returns a boolean if a field has been set.
func (o *LayerFullUpdateContractDto) HasTargetApps() bool {
	if o != nil && !IsNil(o.TargetApps) {
		return true
	}

	return false
}

// SetTargetApps gets a reference to the given LayerContractDtoTargetApps and assigns it to the TargetApps field.
func (o *LayerFullUpdateContractDto) SetTargetApps(v LayerContractDtoTargetApps) {
	o.TargetApps = &v
}

func (o LayerFullUpdateContractDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LayerFullUpdateContractDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["parameters"] = o.Parameters
	if !IsNil(o.TargetApps) {
		toSerialize["targetApps"] = o.TargetApps
	}
	return toSerialize, nil
}

func (o *LayerFullUpdateContractDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"parameters",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLayerFullUpdateContractDto := _LayerFullUpdateContractDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLayerFullUpdateContractDto)

	if err != nil {
		return err
	}

	*o = LayerFullUpdateContractDto(varLayerFullUpdateContractDto)

	return err
}

type NullableLayerFullUpdateContractDto struct {
	value *LayerFullUpdateContractDto
	isSet bool
}

func (v NullableLayerFullUpdateContractDto) Get() *LayerFullUpdateContractDto {
	return v.value
}

func (v *NullableLayerFullUpdateContractDto) Set(val *LayerFullUpdateContractDto) {
	v.value = val
	v.isSet = true
}

func (v NullableLayerFullUpdateContractDto) IsSet() bool {
	return v.isSet
}

func (v *NullableLayerFullUpdateContractDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLayerFullUpdateContractDto(val *LayerFullUpdateContractDto) *NullableLayerFullUpdateContractDto {
	return &NullableLayerFullUpdateContractDto{value: val, isSet: true}
}

func (v NullableLayerFullUpdateContractDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLayerFullUpdateContractDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


