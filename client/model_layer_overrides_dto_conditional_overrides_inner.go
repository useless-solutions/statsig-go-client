/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LayerOverridesDtoConditionalOverridesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LayerOverridesDtoConditionalOverridesInner{}

// LayerOverridesDtoConditionalOverridesInner struct for LayerOverridesDtoConditionalOverridesInner
type LayerOverridesDtoConditionalOverridesInner struct {
	// Describes whether layer override is segment or gate
	Type string `json:"type"`
	// Name of override entity
	Name string `json:"name"`
	ExperimentName string `json:"experimentName"`
	GroupID string `json:"groupID"`
}

type _LayerOverridesDtoConditionalOverridesInner LayerOverridesDtoConditionalOverridesInner

// NewLayerOverridesDtoConditionalOverridesInner instantiates a new LayerOverridesDtoConditionalOverridesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLayerOverridesDtoConditionalOverridesInner(type_ string, name string, experimentName string, groupID string) *LayerOverridesDtoConditionalOverridesInner {
	this := LayerOverridesDtoConditionalOverridesInner{}
	this.Type = type_
	this.Name = name
	this.ExperimentName = experimentName
	this.GroupID = groupID
	return &this
}

// NewLayerOverridesDtoConditionalOverridesInnerWithDefaults instantiates a new LayerOverridesDtoConditionalOverridesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLayerOverridesDtoConditionalOverridesInnerWithDefaults() *LayerOverridesDtoConditionalOverridesInner {
	this := LayerOverridesDtoConditionalOverridesInner{}
	return &this
}

// GetType returns the Type field value
func (o *LayerOverridesDtoConditionalOverridesInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *LayerOverridesDtoConditionalOverridesInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *LayerOverridesDtoConditionalOverridesInner) SetType(v string) {
	o.Type = v
}

// GetName returns the Name field value
func (o *LayerOverridesDtoConditionalOverridesInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LayerOverridesDtoConditionalOverridesInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LayerOverridesDtoConditionalOverridesInner) SetName(v string) {
	o.Name = v
}

// GetExperimentName returns the ExperimentName field value
func (o *LayerOverridesDtoConditionalOverridesInner) GetExperimentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExperimentName
}

// GetExperimentNameOk returns a tuple with the ExperimentName field value
// and a boolean to check if the value has been set.
func (o *LayerOverridesDtoConditionalOverridesInner) GetExperimentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExperimentName, true
}

// SetExperimentName sets field value
func (o *LayerOverridesDtoConditionalOverridesInner) SetExperimentName(v string) {
	o.ExperimentName = v
}

// GetGroupID returns the GroupID field value
func (o *LayerOverridesDtoConditionalOverridesInner) GetGroupID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupID
}

// GetGroupIDOk returns a tuple with the GroupID field value
// and a boolean to check if the value has been set.
func (o *LayerOverridesDtoConditionalOverridesInner) GetGroupIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupID, true
}

// SetGroupID sets field value
func (o *LayerOverridesDtoConditionalOverridesInner) SetGroupID(v string) {
	o.GroupID = v
}

func (o LayerOverridesDtoConditionalOverridesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LayerOverridesDtoConditionalOverridesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["name"] = o.Name
	toSerialize["experimentName"] = o.ExperimentName
	toSerialize["groupID"] = o.GroupID
	return toSerialize, nil
}

func (o *LayerOverridesDtoConditionalOverridesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"name",
		"experimentName",
		"groupID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLayerOverridesDtoConditionalOverridesInner := _LayerOverridesDtoConditionalOverridesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLayerOverridesDtoConditionalOverridesInner)

	if err != nil {
		return err
	}

	*o = LayerOverridesDtoConditionalOverridesInner(varLayerOverridesDtoConditionalOverridesInner)

	return err
}

type NullableLayerOverridesDtoConditionalOverridesInner struct {
	value *LayerOverridesDtoConditionalOverridesInner
	isSet bool
}

func (v NullableLayerOverridesDtoConditionalOverridesInner) Get() *LayerOverridesDtoConditionalOverridesInner {
	return v.value
}

func (v *NullableLayerOverridesDtoConditionalOverridesInner) Set(val *LayerOverridesDtoConditionalOverridesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLayerOverridesDtoConditionalOverridesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLayerOverridesDtoConditionalOverridesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLayerOverridesDtoConditionalOverridesInner(val *LayerOverridesDtoConditionalOverridesInner) *NullableLayerOverridesDtoConditionalOverridesInner {
	return &NullableLayerOverridesDtoConditionalOverridesInner{value: val, isSet: true}
}

func (v NullableLayerOverridesDtoConditionalOverridesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLayerOverridesDtoConditionalOverridesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


