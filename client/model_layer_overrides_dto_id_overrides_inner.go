/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LayerOverridesDtoIdOverridesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LayerOverridesDtoIdOverridesInner{}

// LayerOverridesDtoIdOverridesInner struct for LayerOverridesDtoIdOverridesInner
type LayerOverridesDtoIdOverridesInner struct {
	// Group that ID is overriden into
	GroupName string `json:"groupName"`
	// ID being overriden into a particular group
	Ids []string `json:"ids"`
	IdType *nil `json:"idType,omitempty"`
	Environment *nil `json:"environment,omitempty"`
}

type _LayerOverridesDtoIdOverridesInner LayerOverridesDtoIdOverridesInner

// NewLayerOverridesDtoIdOverridesInner instantiates a new LayerOverridesDtoIdOverridesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLayerOverridesDtoIdOverridesInner(groupName string, ids []string) *LayerOverridesDtoIdOverridesInner {
	this := LayerOverridesDtoIdOverridesInner{}
	this.GroupName = groupName
	this.Ids = ids
	return &this
}

// NewLayerOverridesDtoIdOverridesInnerWithDefaults instantiates a new LayerOverridesDtoIdOverridesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLayerOverridesDtoIdOverridesInnerWithDefaults() *LayerOverridesDtoIdOverridesInner {
	this := LayerOverridesDtoIdOverridesInner{}
	return &this
}

// GetGroupName returns the GroupName field value
func (o *LayerOverridesDtoIdOverridesInner) GetGroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value
// and a boolean to check if the value has been set.
func (o *LayerOverridesDtoIdOverridesInner) GetGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupName, true
}

// SetGroupName sets field value
func (o *LayerOverridesDtoIdOverridesInner) SetGroupName(v string) {
	o.GroupName = v
}

// GetIds returns the Ids field value
func (o *LayerOverridesDtoIdOverridesInner) GetIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value
// and a boolean to check if the value has been set.
func (o *LayerOverridesDtoIdOverridesInner) GetIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ids, true
}

// SetIds sets field value
func (o *LayerOverridesDtoIdOverridesInner) SetIds(v []string) {
	o.Ids = v
}

// GetIdType returns the IdType field value if set, zero value otherwise.
func (o *LayerOverridesDtoIdOverridesInner) GetIdType() nil {
	if o == nil || IsNil(o.IdType) {
		var ret nil
		return ret
	}
	return *o.IdType
}

// GetIdTypeOk returns a tuple with the IdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LayerOverridesDtoIdOverridesInner) GetIdTypeOk() (*nil, bool) {
	if o == nil || IsNil(o.IdType) {
		return nil, false
	}
	return o.IdType, true
}

// HasIdType returns a boolean if a field has been set.
func (o *LayerOverridesDtoIdOverridesInner) HasIdType() bool {
	if o != nil && !IsNil(o.IdType) {
		return true
	}

	return false
}

// SetIdType gets a reference to the given nil and assigns it to the IdType field.
func (o *LayerOverridesDtoIdOverridesInner) SetIdType(v nil) {
	o.IdType = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *LayerOverridesDtoIdOverridesInner) GetEnvironment() nil {
	if o == nil || IsNil(o.Environment) {
		var ret nil
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LayerOverridesDtoIdOverridesInner) GetEnvironmentOk() (*nil, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *LayerOverridesDtoIdOverridesInner) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given nil and assigns it to the Environment field.
func (o *LayerOverridesDtoIdOverridesInner) SetEnvironment(v nil) {
	o.Environment = &v
}

func (o LayerOverridesDtoIdOverridesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LayerOverridesDtoIdOverridesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["groupName"] = o.GroupName
	toSerialize["ids"] = o.Ids
	if !IsNil(o.IdType) {
		toSerialize["idType"] = o.IdType
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	return toSerialize, nil
}

func (o *LayerOverridesDtoIdOverridesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"groupName",
		"ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLayerOverridesDtoIdOverridesInner := _LayerOverridesDtoIdOverridesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLayerOverridesDtoIdOverridesInner)

	if err != nil {
		return err
	}

	*o = LayerOverridesDtoIdOverridesInner(varLayerOverridesDtoIdOverridesInner)

	return err
}

type NullableLayerOverridesDtoIdOverridesInner struct {
	value *LayerOverridesDtoIdOverridesInner
	isSet bool
}

func (v NullableLayerOverridesDtoIdOverridesInner) Get() *LayerOverridesDtoIdOverridesInner {
	return v.value
}

func (v *NullableLayerOverridesDtoIdOverridesInner) Set(val *LayerOverridesDtoIdOverridesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableLayerOverridesDtoIdOverridesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableLayerOverridesDtoIdOverridesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLayerOverridesDtoIdOverridesInner(val *LayerOverridesDtoIdOverridesInner) *NullableLayerOverridesDtoIdOverridesInner {
	return &NullableLayerOverridesDtoIdOverridesInner{value: val, isSet: true}
}

func (v NullableLayerOverridesDtoIdOverridesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLayerOverridesDtoIdOverridesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


