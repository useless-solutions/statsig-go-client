/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MetricsUpdateContractDtoWarehouseNative type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetricsUpdateContractDtoWarehouseNative{}

// MetricsUpdateContractDtoWarehouseNative Optional configuration for metrics utilizing Warehouse Native features, defining specific behaviors and criteria.
type MetricsUpdateContractDtoWarehouseNative struct {
	// Allowed: count┃sum┃mean┃daily_participation┃ratio┃funnel┃count_distinct┃percentile
	Aggregation *string `json:"aggregation,omitempty"`
	// For Count, Sum, Mean, User Count aggregation types: the name of metric source
	MetricSourceName *string `json:"metricSourceName,omitempty"`
	// MetricEventCrtieria
	Criteria []ExternalMetricDefinitionContractDtoMetricEventsInnerCriteriaInner `json:"criteria,omitempty"`
	WaitForCohortWindow *bool `json:"waitForCohortWindow,omitempty"`
	// MetricEventCriteria
	DenominatorCriteria []ExternalMetricDefinitionContractDtoMetricEventsInnerCriteriaInner `json:"denominatorCriteria,omitempty"`
	// Allowed: count┃sum┃mean┃daily_participation┃ratio┃funnel┃count_distinct┃percentile
	DenominatorAggregation *string `json:"denominatorAggregation,omitempty"`
	// Custom end date for rollup in days since exposure.
	DenominatorCustomRollupEnd *float32 `json:"denominatorCustomRollupEnd,omitempty"`
	// Custom start date for rollup in days since exposure.
	DenominatorCustomRollupStart *float32 `json:"denominatorCustomRollupStart,omitempty"`
	// Name of the metric source for the denominator.
	DenominatorMetricSourceName *string `json:"denominatorMetricSourceName,omitempty"`
	// Time window for the denominator metric. Specify \"custom\" for a custom window.
	DenominatorRollupTimeWindow *string `json:"denominatorRollupTimeWindow,omitempty"`
	// Column name for the denominator’s value.
	DenominatorValueColumn *string `json:"denominatorValueColumn,omitempty"`
	// Duration for counting funnel events in days.
	FunnelCalculationWindow *float32 `json:"funnelCalculationWindow,omitempty"`
	// Allowed: users┃sessions for distinct count method in funnel events.
	FunnelCountDistinct *string `json:"funnelCountDistinct,omitempty"`
	// List of funnel events with associated criteria and identifiers.
	FunnelEvents []ExternalMetricDefinitionContractDtoWarehouseNativeFunnelEventsInner `json:"funnelEvents,omitempty"`
	// Allowed: start_event┃exposure to determine funnel start criteria.
	FunnelStartCriteria *string `json:"funnelStartCriteria,omitempty"`
	// Specify metadata columns for breaking down metric analysis.
	MetricDimensionColumns []string `json:"metricDimensionColumns,omitempty"`
	// Number of days for metric baking; specify duration for analysis.
	MetricBakeDays *float32 `json:"metricBakeDays,omitempty"`
	// Aggregation type for numerator; Allowed: count┃sum┃mean┃daily_participation┃ratio┃funnel┃count_distinct┃percentile.
	NumeratorAggregation *string `json:"numeratorAggregation,omitempty"`
	// Column name representing the metric’s value.
	ValueColumn *string `json:"valueColumn,omitempty"`
	// High threshold for winsorization; must be between 0 and 1.
	WinsorizationHigh *float32 `json:"winsorizationHigh,omitempty"`
	// Low threshold for winsorization; must be between 0 and 1.
	WinsorizationLow *float32 `json:"winsorizationLow,omitempty"`
	// Attribution window for CUPED adjustments in days.
	CupedAttributionWindow *nil `json:"cupedAttributionWindow,omitempty"`
	// Flag to include only users with a conversion event in the metric.
	OnlyIncludeUsersWithConversionEvent *bool `json:"onlyIncludeUsersWithConversionEvent,omitempty"`
	// Percentile value for statistical calculations.
	Percentile *float32 `json:"percentile,omitempty"`
	// Threshold value for filtering metrics.
	ValueThreshold *float32 `json:"valueThreshold,omitempty"`
	// Maximum cap for metric values.
	Cap *float32 `json:"cap,omitempty"`
	// General time window for rollup; can specify custom settings.
	RollupTimeWindow *string `json:"rollupTimeWindow,omitempty"`
	// Custom start date for rollup in days since exposure.
	CustomRollUpStart *float32 `json:"customRollUpStart,omitempty"`
	// Custom end date for rollup in days since exposure.
	CustomRollUpEnd *float32 `json:"customRollUpEnd,omitempty"`
	// Include units which do not have a denominator. Only applicable to ratios.
	AllowNullRatioDenominator *bool `json:"allowNullRatioDenominator,omitempty"`
}

// NewMetricsUpdateContractDtoWarehouseNative instantiates a new MetricsUpdateContractDtoWarehouseNative object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricsUpdateContractDtoWarehouseNative() *MetricsUpdateContractDtoWarehouseNative {
	this := MetricsUpdateContractDtoWarehouseNative{}
	return &this
}

// NewMetricsUpdateContractDtoWarehouseNativeWithDefaults instantiates a new MetricsUpdateContractDtoWarehouseNative object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricsUpdateContractDtoWarehouseNativeWithDefaults() *MetricsUpdateContractDtoWarehouseNative {
	this := MetricsUpdateContractDtoWarehouseNative{}
	return &this
}

// GetAggregation returns the Aggregation field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetAggregation() string {
	if o == nil || IsNil(o.Aggregation) {
		var ret string
		return ret
	}
	return *o.Aggregation
}

// GetAggregationOk returns a tuple with the Aggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetAggregationOk() (*string, bool) {
	if o == nil || IsNil(o.Aggregation) {
		return nil, false
	}
	return o.Aggregation, true
}

// HasAggregation returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasAggregation() bool {
	if o != nil && !IsNil(o.Aggregation) {
		return true
	}

	return false
}

// SetAggregation gets a reference to the given string and assigns it to the Aggregation field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetAggregation(v string) {
	o.Aggregation = &v
}

// GetMetricSourceName returns the MetricSourceName field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetMetricSourceName() string {
	if o == nil || IsNil(o.MetricSourceName) {
		var ret string
		return ret
	}
	return *o.MetricSourceName
}

// GetMetricSourceNameOk returns a tuple with the MetricSourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetMetricSourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.MetricSourceName) {
		return nil, false
	}
	return o.MetricSourceName, true
}

// HasMetricSourceName returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasMetricSourceName() bool {
	if o != nil && !IsNil(o.MetricSourceName) {
		return true
	}

	return false
}

// SetMetricSourceName gets a reference to the given string and assigns it to the MetricSourceName field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetMetricSourceName(v string) {
	o.MetricSourceName = &v
}

// GetCriteria returns the Criteria field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetCriteria() []ExternalMetricDefinitionContractDtoMetricEventsInnerCriteriaInner {
	if o == nil || IsNil(o.Criteria) {
		var ret []ExternalMetricDefinitionContractDtoMetricEventsInnerCriteriaInner
		return ret
	}
	return o.Criteria
}

// GetCriteriaOk returns a tuple with the Criteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetCriteriaOk() ([]ExternalMetricDefinitionContractDtoMetricEventsInnerCriteriaInner, bool) {
	if o == nil || IsNil(o.Criteria) {
		return nil, false
	}
	return o.Criteria, true
}

// HasCriteria returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasCriteria() bool {
	if o != nil && !IsNil(o.Criteria) {
		return true
	}

	return false
}

// SetCriteria gets a reference to the given []ExternalMetricDefinitionContractDtoMetricEventsInnerCriteriaInner and assigns it to the Criteria field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetCriteria(v []ExternalMetricDefinitionContractDtoMetricEventsInnerCriteriaInner) {
	o.Criteria = v
}

// GetWaitForCohortWindow returns the WaitForCohortWindow field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetWaitForCohortWindow() bool {
	if o == nil || IsNil(o.WaitForCohortWindow) {
		var ret bool
		return ret
	}
	return *o.WaitForCohortWindow
}

// GetWaitForCohortWindowOk returns a tuple with the WaitForCohortWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetWaitForCohortWindowOk() (*bool, bool) {
	if o == nil || IsNil(o.WaitForCohortWindow) {
		return nil, false
	}
	return o.WaitForCohortWindow, true
}

// HasWaitForCohortWindow returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasWaitForCohortWindow() bool {
	if o != nil && !IsNil(o.WaitForCohortWindow) {
		return true
	}

	return false
}

// SetWaitForCohortWindow gets a reference to the given bool and assigns it to the WaitForCohortWindow field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetWaitForCohortWindow(v bool) {
	o.WaitForCohortWindow = &v
}

// GetDenominatorCriteria returns the DenominatorCriteria field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetDenominatorCriteria() []ExternalMetricDefinitionContractDtoMetricEventsInnerCriteriaInner {
	if o == nil || IsNil(o.DenominatorCriteria) {
		var ret []ExternalMetricDefinitionContractDtoMetricEventsInnerCriteriaInner
		return ret
	}
	return o.DenominatorCriteria
}

// GetDenominatorCriteriaOk returns a tuple with the DenominatorCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetDenominatorCriteriaOk() ([]ExternalMetricDefinitionContractDtoMetricEventsInnerCriteriaInner, bool) {
	if o == nil || IsNil(o.DenominatorCriteria) {
		return nil, false
	}
	return o.DenominatorCriteria, true
}

// HasDenominatorCriteria returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasDenominatorCriteria() bool {
	if o != nil && !IsNil(o.DenominatorCriteria) {
		return true
	}

	return false
}

// SetDenominatorCriteria gets a reference to the given []ExternalMetricDefinitionContractDtoMetricEventsInnerCriteriaInner and assigns it to the DenominatorCriteria field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetDenominatorCriteria(v []ExternalMetricDefinitionContractDtoMetricEventsInnerCriteriaInner) {
	o.DenominatorCriteria = v
}

// GetDenominatorAggregation returns the DenominatorAggregation field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetDenominatorAggregation() string {
	if o == nil || IsNil(o.DenominatorAggregation) {
		var ret string
		return ret
	}
	return *o.DenominatorAggregation
}

// GetDenominatorAggregationOk returns a tuple with the DenominatorAggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetDenominatorAggregationOk() (*string, bool) {
	if o == nil || IsNil(o.DenominatorAggregation) {
		return nil, false
	}
	return o.DenominatorAggregation, true
}

// HasDenominatorAggregation returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasDenominatorAggregation() bool {
	if o != nil && !IsNil(o.DenominatorAggregation) {
		return true
	}

	return false
}

// SetDenominatorAggregation gets a reference to the given string and assigns it to the DenominatorAggregation field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetDenominatorAggregation(v string) {
	o.DenominatorAggregation = &v
}

// GetDenominatorCustomRollupEnd returns the DenominatorCustomRollupEnd field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetDenominatorCustomRollupEnd() float32 {
	if o == nil || IsNil(o.DenominatorCustomRollupEnd) {
		var ret float32
		return ret
	}
	return *o.DenominatorCustomRollupEnd
}

// GetDenominatorCustomRollupEndOk returns a tuple with the DenominatorCustomRollupEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetDenominatorCustomRollupEndOk() (*float32, bool) {
	if o == nil || IsNil(o.DenominatorCustomRollupEnd) {
		return nil, false
	}
	return o.DenominatorCustomRollupEnd, true
}

// HasDenominatorCustomRollupEnd returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasDenominatorCustomRollupEnd() bool {
	if o != nil && !IsNil(o.DenominatorCustomRollupEnd) {
		return true
	}

	return false
}

// SetDenominatorCustomRollupEnd gets a reference to the given float32 and assigns it to the DenominatorCustomRollupEnd field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetDenominatorCustomRollupEnd(v float32) {
	o.DenominatorCustomRollupEnd = &v
}

// GetDenominatorCustomRollupStart returns the DenominatorCustomRollupStart field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetDenominatorCustomRollupStart() float32 {
	if o == nil || IsNil(o.DenominatorCustomRollupStart) {
		var ret float32
		return ret
	}
	return *o.DenominatorCustomRollupStart
}

// GetDenominatorCustomRollupStartOk returns a tuple with the DenominatorCustomRollupStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetDenominatorCustomRollupStartOk() (*float32, bool) {
	if o == nil || IsNil(o.DenominatorCustomRollupStart) {
		return nil, false
	}
	return o.DenominatorCustomRollupStart, true
}

// HasDenominatorCustomRollupStart returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasDenominatorCustomRollupStart() bool {
	if o != nil && !IsNil(o.DenominatorCustomRollupStart) {
		return true
	}

	return false
}

// SetDenominatorCustomRollupStart gets a reference to the given float32 and assigns it to the DenominatorCustomRollupStart field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetDenominatorCustomRollupStart(v float32) {
	o.DenominatorCustomRollupStart = &v
}

// GetDenominatorMetricSourceName returns the DenominatorMetricSourceName field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetDenominatorMetricSourceName() string {
	if o == nil || IsNil(o.DenominatorMetricSourceName) {
		var ret string
		return ret
	}
	return *o.DenominatorMetricSourceName
}

// GetDenominatorMetricSourceNameOk returns a tuple with the DenominatorMetricSourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetDenominatorMetricSourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.DenominatorMetricSourceName) {
		return nil, false
	}
	return o.DenominatorMetricSourceName, true
}

// HasDenominatorMetricSourceName returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasDenominatorMetricSourceName() bool {
	if o != nil && !IsNil(o.DenominatorMetricSourceName) {
		return true
	}

	return false
}

// SetDenominatorMetricSourceName gets a reference to the given string and assigns it to the DenominatorMetricSourceName field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetDenominatorMetricSourceName(v string) {
	o.DenominatorMetricSourceName = &v
}

// GetDenominatorRollupTimeWindow returns the DenominatorRollupTimeWindow field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetDenominatorRollupTimeWindow() string {
	if o == nil || IsNil(o.DenominatorRollupTimeWindow) {
		var ret string
		return ret
	}
	return *o.DenominatorRollupTimeWindow
}

// GetDenominatorRollupTimeWindowOk returns a tuple with the DenominatorRollupTimeWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetDenominatorRollupTimeWindowOk() (*string, bool) {
	if o == nil || IsNil(o.DenominatorRollupTimeWindow) {
		return nil, false
	}
	return o.DenominatorRollupTimeWindow, true
}

// HasDenominatorRollupTimeWindow returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasDenominatorRollupTimeWindow() bool {
	if o != nil && !IsNil(o.DenominatorRollupTimeWindow) {
		return true
	}

	return false
}

// SetDenominatorRollupTimeWindow gets a reference to the given string and assigns it to the DenominatorRollupTimeWindow field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetDenominatorRollupTimeWindow(v string) {
	o.DenominatorRollupTimeWindow = &v
}

// GetDenominatorValueColumn returns the DenominatorValueColumn field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetDenominatorValueColumn() string {
	if o == nil || IsNil(o.DenominatorValueColumn) {
		var ret string
		return ret
	}
	return *o.DenominatorValueColumn
}

// GetDenominatorValueColumnOk returns a tuple with the DenominatorValueColumn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetDenominatorValueColumnOk() (*string, bool) {
	if o == nil || IsNil(o.DenominatorValueColumn) {
		return nil, false
	}
	return o.DenominatorValueColumn, true
}

// HasDenominatorValueColumn returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasDenominatorValueColumn() bool {
	if o != nil && !IsNil(o.DenominatorValueColumn) {
		return true
	}

	return false
}

// SetDenominatorValueColumn gets a reference to the given string and assigns it to the DenominatorValueColumn field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetDenominatorValueColumn(v string) {
	o.DenominatorValueColumn = &v
}

// GetFunnelCalculationWindow returns the FunnelCalculationWindow field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetFunnelCalculationWindow() float32 {
	if o == nil || IsNil(o.FunnelCalculationWindow) {
		var ret float32
		return ret
	}
	return *o.FunnelCalculationWindow
}

// GetFunnelCalculationWindowOk returns a tuple with the FunnelCalculationWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetFunnelCalculationWindowOk() (*float32, bool) {
	if o == nil || IsNil(o.FunnelCalculationWindow) {
		return nil, false
	}
	return o.FunnelCalculationWindow, true
}

// HasFunnelCalculationWindow returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasFunnelCalculationWindow() bool {
	if o != nil && !IsNil(o.FunnelCalculationWindow) {
		return true
	}

	return false
}

// SetFunnelCalculationWindow gets a reference to the given float32 and assigns it to the FunnelCalculationWindow field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetFunnelCalculationWindow(v float32) {
	o.FunnelCalculationWindow = &v
}

// GetFunnelCountDistinct returns the FunnelCountDistinct field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetFunnelCountDistinct() string {
	if o == nil || IsNil(o.FunnelCountDistinct) {
		var ret string
		return ret
	}
	return *o.FunnelCountDistinct
}

// GetFunnelCountDistinctOk returns a tuple with the FunnelCountDistinct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetFunnelCountDistinctOk() (*string, bool) {
	if o == nil || IsNil(o.FunnelCountDistinct) {
		return nil, false
	}
	return o.FunnelCountDistinct, true
}

// HasFunnelCountDistinct returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasFunnelCountDistinct() bool {
	if o != nil && !IsNil(o.FunnelCountDistinct) {
		return true
	}

	return false
}

// SetFunnelCountDistinct gets a reference to the given string and assigns it to the FunnelCountDistinct field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetFunnelCountDistinct(v string) {
	o.FunnelCountDistinct = &v
}

// GetFunnelEvents returns the FunnelEvents field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetFunnelEvents() []ExternalMetricDefinitionContractDtoWarehouseNativeFunnelEventsInner {
	if o == nil || IsNil(o.FunnelEvents) {
		var ret []ExternalMetricDefinitionContractDtoWarehouseNativeFunnelEventsInner
		return ret
	}
	return o.FunnelEvents
}

// GetFunnelEventsOk returns a tuple with the FunnelEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetFunnelEventsOk() ([]ExternalMetricDefinitionContractDtoWarehouseNativeFunnelEventsInner, bool) {
	if o == nil || IsNil(o.FunnelEvents) {
		return nil, false
	}
	return o.FunnelEvents, true
}

// HasFunnelEvents returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasFunnelEvents() bool {
	if o != nil && !IsNil(o.FunnelEvents) {
		return true
	}

	return false
}

// SetFunnelEvents gets a reference to the given []ExternalMetricDefinitionContractDtoWarehouseNativeFunnelEventsInner and assigns it to the FunnelEvents field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetFunnelEvents(v []ExternalMetricDefinitionContractDtoWarehouseNativeFunnelEventsInner) {
	o.FunnelEvents = v
}

// GetFunnelStartCriteria returns the FunnelStartCriteria field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetFunnelStartCriteria() string {
	if o == nil || IsNil(o.FunnelStartCriteria) {
		var ret string
		return ret
	}
	return *o.FunnelStartCriteria
}

// GetFunnelStartCriteriaOk returns a tuple with the FunnelStartCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetFunnelStartCriteriaOk() (*string, bool) {
	if o == nil || IsNil(o.FunnelStartCriteria) {
		return nil, false
	}
	return o.FunnelStartCriteria, true
}

// HasFunnelStartCriteria returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasFunnelStartCriteria() bool {
	if o != nil && !IsNil(o.FunnelStartCriteria) {
		return true
	}

	return false
}

// SetFunnelStartCriteria gets a reference to the given string and assigns it to the FunnelStartCriteria field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetFunnelStartCriteria(v string) {
	o.FunnelStartCriteria = &v
}

// GetMetricDimensionColumns returns the MetricDimensionColumns field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetMetricDimensionColumns() []string {
	if o == nil || IsNil(o.MetricDimensionColumns) {
		var ret []string
		return ret
	}
	return o.MetricDimensionColumns
}

// GetMetricDimensionColumnsOk returns a tuple with the MetricDimensionColumns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetMetricDimensionColumnsOk() ([]string, bool) {
	if o == nil || IsNil(o.MetricDimensionColumns) {
		return nil, false
	}
	return o.MetricDimensionColumns, true
}

// HasMetricDimensionColumns returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasMetricDimensionColumns() bool {
	if o != nil && !IsNil(o.MetricDimensionColumns) {
		return true
	}

	return false
}

// SetMetricDimensionColumns gets a reference to the given []string and assigns it to the MetricDimensionColumns field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetMetricDimensionColumns(v []string) {
	o.MetricDimensionColumns = v
}

// GetMetricBakeDays returns the MetricBakeDays field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetMetricBakeDays() float32 {
	if o == nil || IsNil(o.MetricBakeDays) {
		var ret float32
		return ret
	}
	return *o.MetricBakeDays
}

// GetMetricBakeDaysOk returns a tuple with the MetricBakeDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetMetricBakeDaysOk() (*float32, bool) {
	if o == nil || IsNil(o.MetricBakeDays) {
		return nil, false
	}
	return o.MetricBakeDays, true
}

// HasMetricBakeDays returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasMetricBakeDays() bool {
	if o != nil && !IsNil(o.MetricBakeDays) {
		return true
	}

	return false
}

// SetMetricBakeDays gets a reference to the given float32 and assigns it to the MetricBakeDays field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetMetricBakeDays(v float32) {
	o.MetricBakeDays = &v
}

// GetNumeratorAggregation returns the NumeratorAggregation field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetNumeratorAggregation() string {
	if o == nil || IsNil(o.NumeratorAggregation) {
		var ret string
		return ret
	}
	return *o.NumeratorAggregation
}

// GetNumeratorAggregationOk returns a tuple with the NumeratorAggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetNumeratorAggregationOk() (*string, bool) {
	if o == nil || IsNil(o.NumeratorAggregation) {
		return nil, false
	}
	return o.NumeratorAggregation, true
}

// HasNumeratorAggregation returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasNumeratorAggregation() bool {
	if o != nil && !IsNil(o.NumeratorAggregation) {
		return true
	}

	return false
}

// SetNumeratorAggregation gets a reference to the given string and assigns it to the NumeratorAggregation field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetNumeratorAggregation(v string) {
	o.NumeratorAggregation = &v
}

// GetValueColumn returns the ValueColumn field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetValueColumn() string {
	if o == nil || IsNil(o.ValueColumn) {
		var ret string
		return ret
	}
	return *o.ValueColumn
}

// GetValueColumnOk returns a tuple with the ValueColumn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetValueColumnOk() (*string, bool) {
	if o == nil || IsNil(o.ValueColumn) {
		return nil, false
	}
	return o.ValueColumn, true
}

// HasValueColumn returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasValueColumn() bool {
	if o != nil && !IsNil(o.ValueColumn) {
		return true
	}

	return false
}

// SetValueColumn gets a reference to the given string and assigns it to the ValueColumn field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetValueColumn(v string) {
	o.ValueColumn = &v
}

// GetWinsorizationHigh returns the WinsorizationHigh field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetWinsorizationHigh() float32 {
	if o == nil || IsNil(o.WinsorizationHigh) {
		var ret float32
		return ret
	}
	return *o.WinsorizationHigh
}

// GetWinsorizationHighOk returns a tuple with the WinsorizationHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetWinsorizationHighOk() (*float32, bool) {
	if o == nil || IsNil(o.WinsorizationHigh) {
		return nil, false
	}
	return o.WinsorizationHigh, true
}

// HasWinsorizationHigh returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasWinsorizationHigh() bool {
	if o != nil && !IsNil(o.WinsorizationHigh) {
		return true
	}

	return false
}

// SetWinsorizationHigh gets a reference to the given float32 and assigns it to the WinsorizationHigh field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetWinsorizationHigh(v float32) {
	o.WinsorizationHigh = &v
}

// GetWinsorizationLow returns the WinsorizationLow field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetWinsorizationLow() float32 {
	if o == nil || IsNil(o.WinsorizationLow) {
		var ret float32
		return ret
	}
	return *o.WinsorizationLow
}

// GetWinsorizationLowOk returns a tuple with the WinsorizationLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetWinsorizationLowOk() (*float32, bool) {
	if o == nil || IsNil(o.WinsorizationLow) {
		return nil, false
	}
	return o.WinsorizationLow, true
}

// HasWinsorizationLow returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasWinsorizationLow() bool {
	if o != nil && !IsNil(o.WinsorizationLow) {
		return true
	}

	return false
}

// SetWinsorizationLow gets a reference to the given float32 and assigns it to the WinsorizationLow field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetWinsorizationLow(v float32) {
	o.WinsorizationLow = &v
}

// GetCupedAttributionWindow returns the CupedAttributionWindow field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetCupedAttributionWindow() nil {
	if o == nil || IsNil(o.CupedAttributionWindow) {
		var ret nil
		return ret
	}
	return *o.CupedAttributionWindow
}

// GetCupedAttributionWindowOk returns a tuple with the CupedAttributionWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetCupedAttributionWindowOk() (*nil, bool) {
	if o == nil || IsNil(o.CupedAttributionWindow) {
		return nil, false
	}
	return o.CupedAttributionWindow, true
}

// HasCupedAttributionWindow returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasCupedAttributionWindow() bool {
	if o != nil && !IsNil(o.CupedAttributionWindow) {
		return true
	}

	return false
}

// SetCupedAttributionWindow gets a reference to the given nil and assigns it to the CupedAttributionWindow field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetCupedAttributionWindow(v nil) {
	o.CupedAttributionWindow = &v
}

// GetOnlyIncludeUsersWithConversionEvent returns the OnlyIncludeUsersWithConversionEvent field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetOnlyIncludeUsersWithConversionEvent() bool {
	if o == nil || IsNil(o.OnlyIncludeUsersWithConversionEvent) {
		var ret bool
		return ret
	}
	return *o.OnlyIncludeUsersWithConversionEvent
}

// GetOnlyIncludeUsersWithConversionEventOk returns a tuple with the OnlyIncludeUsersWithConversionEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetOnlyIncludeUsersWithConversionEventOk() (*bool, bool) {
	if o == nil || IsNil(o.OnlyIncludeUsersWithConversionEvent) {
		return nil, false
	}
	return o.OnlyIncludeUsersWithConversionEvent, true
}

// HasOnlyIncludeUsersWithConversionEvent returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasOnlyIncludeUsersWithConversionEvent() bool {
	if o != nil && !IsNil(o.OnlyIncludeUsersWithConversionEvent) {
		return true
	}

	return false
}

// SetOnlyIncludeUsersWithConversionEvent gets a reference to the given bool and assigns it to the OnlyIncludeUsersWithConversionEvent field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetOnlyIncludeUsersWithConversionEvent(v bool) {
	o.OnlyIncludeUsersWithConversionEvent = &v
}

// GetPercentile returns the Percentile field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetPercentile() float32 {
	if o == nil || IsNil(o.Percentile) {
		var ret float32
		return ret
	}
	return *o.Percentile
}

// GetPercentileOk returns a tuple with the Percentile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetPercentileOk() (*float32, bool) {
	if o == nil || IsNil(o.Percentile) {
		return nil, false
	}
	return o.Percentile, true
}

// HasPercentile returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasPercentile() bool {
	if o != nil && !IsNil(o.Percentile) {
		return true
	}

	return false
}

// SetPercentile gets a reference to the given float32 and assigns it to the Percentile field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetPercentile(v float32) {
	o.Percentile = &v
}

// GetValueThreshold returns the ValueThreshold field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetValueThreshold() float32 {
	if o == nil || IsNil(o.ValueThreshold) {
		var ret float32
		return ret
	}
	return *o.ValueThreshold
}

// GetValueThresholdOk returns a tuple with the ValueThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetValueThresholdOk() (*float32, bool) {
	if o == nil || IsNil(o.ValueThreshold) {
		return nil, false
	}
	return o.ValueThreshold, true
}

// HasValueThreshold returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasValueThreshold() bool {
	if o != nil && !IsNil(o.ValueThreshold) {
		return true
	}

	return false
}

// SetValueThreshold gets a reference to the given float32 and assigns it to the ValueThreshold field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetValueThreshold(v float32) {
	o.ValueThreshold = &v
}

// GetCap returns the Cap field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetCap() float32 {
	if o == nil || IsNil(o.Cap) {
		var ret float32
		return ret
	}
	return *o.Cap
}

// GetCapOk returns a tuple with the Cap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetCapOk() (*float32, bool) {
	if o == nil || IsNil(o.Cap) {
		return nil, false
	}
	return o.Cap, true
}

// HasCap returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasCap() bool {
	if o != nil && !IsNil(o.Cap) {
		return true
	}

	return false
}

// SetCap gets a reference to the given float32 and assigns it to the Cap field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetCap(v float32) {
	o.Cap = &v
}

// GetRollupTimeWindow returns the RollupTimeWindow field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetRollupTimeWindow() string {
	if o == nil || IsNil(o.RollupTimeWindow) {
		var ret string
		return ret
	}
	return *o.RollupTimeWindow
}

// GetRollupTimeWindowOk returns a tuple with the RollupTimeWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetRollupTimeWindowOk() (*string, bool) {
	if o == nil || IsNil(o.RollupTimeWindow) {
		return nil, false
	}
	return o.RollupTimeWindow, true
}

// HasRollupTimeWindow returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasRollupTimeWindow() bool {
	if o != nil && !IsNil(o.RollupTimeWindow) {
		return true
	}

	return false
}

// SetRollupTimeWindow gets a reference to the given string and assigns it to the RollupTimeWindow field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetRollupTimeWindow(v string) {
	o.RollupTimeWindow = &v
}

// GetCustomRollUpStart returns the CustomRollUpStart field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetCustomRollUpStart() float32 {
	if o == nil || IsNil(o.CustomRollUpStart) {
		var ret float32
		return ret
	}
	return *o.CustomRollUpStart
}

// GetCustomRollUpStartOk returns a tuple with the CustomRollUpStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetCustomRollUpStartOk() (*float32, bool) {
	if o == nil || IsNil(o.CustomRollUpStart) {
		return nil, false
	}
	return o.CustomRollUpStart, true
}

// HasCustomRollUpStart returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasCustomRollUpStart() bool {
	if o != nil && !IsNil(o.CustomRollUpStart) {
		return true
	}

	return false
}

// SetCustomRollUpStart gets a reference to the given float32 and assigns it to the CustomRollUpStart field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetCustomRollUpStart(v float32) {
	o.CustomRollUpStart = &v
}

// GetCustomRollUpEnd returns the CustomRollUpEnd field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetCustomRollUpEnd() float32 {
	if o == nil || IsNil(o.CustomRollUpEnd) {
		var ret float32
		return ret
	}
	return *o.CustomRollUpEnd
}

// GetCustomRollUpEndOk returns a tuple with the CustomRollUpEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetCustomRollUpEndOk() (*float32, bool) {
	if o == nil || IsNil(o.CustomRollUpEnd) {
		return nil, false
	}
	return o.CustomRollUpEnd, true
}

// HasCustomRollUpEnd returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasCustomRollUpEnd() bool {
	if o != nil && !IsNil(o.CustomRollUpEnd) {
		return true
	}

	return false
}

// SetCustomRollUpEnd gets a reference to the given float32 and assigns it to the CustomRollUpEnd field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetCustomRollUpEnd(v float32) {
	o.CustomRollUpEnd = &v
}

// GetAllowNullRatioDenominator returns the AllowNullRatioDenominator field value if set, zero value otherwise.
func (o *MetricsUpdateContractDtoWarehouseNative) GetAllowNullRatioDenominator() bool {
	if o == nil || IsNil(o.AllowNullRatioDenominator) {
		var ret bool
		return ret
	}
	return *o.AllowNullRatioDenominator
}

// GetAllowNullRatioDenominatorOk returns a tuple with the AllowNullRatioDenominator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) GetAllowNullRatioDenominatorOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowNullRatioDenominator) {
		return nil, false
	}
	return o.AllowNullRatioDenominator, true
}

// HasAllowNullRatioDenominator returns a boolean if a field has been set.
func (o *MetricsUpdateContractDtoWarehouseNative) HasAllowNullRatioDenominator() bool {
	if o != nil && !IsNil(o.AllowNullRatioDenominator) {
		return true
	}

	return false
}

// SetAllowNullRatioDenominator gets a reference to the given bool and assigns it to the AllowNullRatioDenominator field.
func (o *MetricsUpdateContractDtoWarehouseNative) SetAllowNullRatioDenominator(v bool) {
	o.AllowNullRatioDenominator = &v
}

func (o MetricsUpdateContractDtoWarehouseNative) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetricsUpdateContractDtoWarehouseNative) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aggregation) {
		toSerialize["aggregation"] = o.Aggregation
	}
	if !IsNil(o.MetricSourceName) {
		toSerialize["metricSourceName"] = o.MetricSourceName
	}
	if !IsNil(o.Criteria) {
		toSerialize["criteria"] = o.Criteria
	}
	if !IsNil(o.WaitForCohortWindow) {
		toSerialize["waitForCohortWindow"] = o.WaitForCohortWindow
	}
	if !IsNil(o.DenominatorCriteria) {
		toSerialize["denominatorCriteria"] = o.DenominatorCriteria
	}
	if !IsNil(o.DenominatorAggregation) {
		toSerialize["denominatorAggregation"] = o.DenominatorAggregation
	}
	if !IsNil(o.DenominatorCustomRollupEnd) {
		toSerialize["denominatorCustomRollupEnd"] = o.DenominatorCustomRollupEnd
	}
	if !IsNil(o.DenominatorCustomRollupStart) {
		toSerialize["denominatorCustomRollupStart"] = o.DenominatorCustomRollupStart
	}
	if !IsNil(o.DenominatorMetricSourceName) {
		toSerialize["denominatorMetricSourceName"] = o.DenominatorMetricSourceName
	}
	if !IsNil(o.DenominatorRollupTimeWindow) {
		toSerialize["denominatorRollupTimeWindow"] = o.DenominatorRollupTimeWindow
	}
	if !IsNil(o.DenominatorValueColumn) {
		toSerialize["denominatorValueColumn"] = o.DenominatorValueColumn
	}
	if !IsNil(o.FunnelCalculationWindow) {
		toSerialize["funnelCalculationWindow"] = o.FunnelCalculationWindow
	}
	if !IsNil(o.FunnelCountDistinct) {
		toSerialize["funnelCountDistinct"] = o.FunnelCountDistinct
	}
	if !IsNil(o.FunnelEvents) {
		toSerialize["funnelEvents"] = o.FunnelEvents
	}
	if !IsNil(o.FunnelStartCriteria) {
		toSerialize["funnelStartCriteria"] = o.FunnelStartCriteria
	}
	if !IsNil(o.MetricDimensionColumns) {
		toSerialize["metricDimensionColumns"] = o.MetricDimensionColumns
	}
	if !IsNil(o.MetricBakeDays) {
		toSerialize["metricBakeDays"] = o.MetricBakeDays
	}
	if !IsNil(o.NumeratorAggregation) {
		toSerialize["numeratorAggregation"] = o.NumeratorAggregation
	}
	if !IsNil(o.ValueColumn) {
		toSerialize["valueColumn"] = o.ValueColumn
	}
	if !IsNil(o.WinsorizationHigh) {
		toSerialize["winsorizationHigh"] = o.WinsorizationHigh
	}
	if !IsNil(o.WinsorizationLow) {
		toSerialize["winsorizationLow"] = o.WinsorizationLow
	}
	if !IsNil(o.CupedAttributionWindow) {
		toSerialize["cupedAttributionWindow"] = o.CupedAttributionWindow
	}
	if !IsNil(o.OnlyIncludeUsersWithConversionEvent) {
		toSerialize["onlyIncludeUsersWithConversionEvent"] = o.OnlyIncludeUsersWithConversionEvent
	}
	if !IsNil(o.Percentile) {
		toSerialize["percentile"] = o.Percentile
	}
	if !IsNil(o.ValueThreshold) {
		toSerialize["valueThreshold"] = o.ValueThreshold
	}
	if !IsNil(o.Cap) {
		toSerialize["cap"] = o.Cap
	}
	if !IsNil(o.RollupTimeWindow) {
		toSerialize["rollupTimeWindow"] = o.RollupTimeWindow
	}
	if !IsNil(o.CustomRollUpStart) {
		toSerialize["customRollUpStart"] = o.CustomRollUpStart
	}
	if !IsNil(o.CustomRollUpEnd) {
		toSerialize["customRollUpEnd"] = o.CustomRollUpEnd
	}
	if !IsNil(o.AllowNullRatioDenominator) {
		toSerialize["allowNullRatioDenominator"] = o.AllowNullRatioDenominator
	}
	return toSerialize, nil
}

type NullableMetricsUpdateContractDtoWarehouseNative struct {
	value *MetricsUpdateContractDtoWarehouseNative
	isSet bool
}

func (v NullableMetricsUpdateContractDtoWarehouseNative) Get() *MetricsUpdateContractDtoWarehouseNative {
	return v.value
}

func (v *NullableMetricsUpdateContractDtoWarehouseNative) Set(val *MetricsUpdateContractDtoWarehouseNative) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricsUpdateContractDtoWarehouseNative) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricsUpdateContractDtoWarehouseNative) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricsUpdateContractDtoWarehouseNative(val *MetricsUpdateContractDtoWarehouseNative) *NullableMetricsUpdateContractDtoWarehouseNative {
	return &NullableMetricsUpdateContractDtoWarehouseNative{value: val, isSet: true}
}

func (v NullableMetricsUpdateContractDtoWarehouseNative) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricsUpdateContractDtoWarehouseNative) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


