/*
Console API

       The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.       If you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.       <br /><br />       <b>Authorization</b>       <br />       All requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)       <br /><br />       <b>Rate Limiting</b>       <br />       Requests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.       <br /><br />       <b>Keyboard Search</b>       <br />       Use <code>Ctrl/Cmd + K</code> to search for specific endpoints.       

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the MultipleEventDeltaDtoInnerEventsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultipleEventDeltaDtoInnerEventsInner{}

// MultipleEventDeltaDtoInnerEventsInner struct for MultipleEventDeltaDtoInnerEventsInner
type MultipleEventDeltaDtoInnerEventsInner struct {
	Source string `json:"source"`
	Event string `json:"event"`
	InternalCount float32 `json:"internal_count"`
	ExternalCount float32 `json:"external_count"`
	HasDiff bool `json:"has_diff"`
	Threshold float32 `json:"threshold"`
	LastUpdatedTime time.Time `json:"last_updated_time"`
}

type _MultipleEventDeltaDtoInnerEventsInner MultipleEventDeltaDtoInnerEventsInner

// NewMultipleEventDeltaDtoInnerEventsInner instantiates a new MultipleEventDeltaDtoInnerEventsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipleEventDeltaDtoInnerEventsInner(source string, event string, internalCount float32, externalCount float32, hasDiff bool, threshold float32, lastUpdatedTime time.Time) *MultipleEventDeltaDtoInnerEventsInner {
	this := MultipleEventDeltaDtoInnerEventsInner{}
	this.Source = source
	this.Event = event
	this.InternalCount = internalCount
	this.ExternalCount = externalCount
	this.HasDiff = hasDiff
	this.Threshold = threshold
	this.LastUpdatedTime = lastUpdatedTime
	return &this
}

// NewMultipleEventDeltaDtoInnerEventsInnerWithDefaults instantiates a new MultipleEventDeltaDtoInnerEventsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipleEventDeltaDtoInnerEventsInnerWithDefaults() *MultipleEventDeltaDtoInnerEventsInner {
	this := MultipleEventDeltaDtoInnerEventsInner{}
	return &this
}

// GetSource returns the Source field value
func (o *MultipleEventDeltaDtoInnerEventsInner) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *MultipleEventDeltaDtoInnerEventsInner) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *MultipleEventDeltaDtoInnerEventsInner) SetSource(v string) {
	o.Source = v
}

// GetEvent returns the Event field value
func (o *MultipleEventDeltaDtoInnerEventsInner) GetEvent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *MultipleEventDeltaDtoInnerEventsInner) GetEventOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *MultipleEventDeltaDtoInnerEventsInner) SetEvent(v string) {
	o.Event = v
}

// GetInternalCount returns the InternalCount field value
func (o *MultipleEventDeltaDtoInnerEventsInner) GetInternalCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.InternalCount
}

// GetInternalCountOk returns a tuple with the InternalCount field value
// and a boolean to check if the value has been set.
func (o *MultipleEventDeltaDtoInnerEventsInner) GetInternalCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InternalCount, true
}

// SetInternalCount sets field value
func (o *MultipleEventDeltaDtoInnerEventsInner) SetInternalCount(v float32) {
	o.InternalCount = v
}

// GetExternalCount returns the ExternalCount field value
func (o *MultipleEventDeltaDtoInnerEventsInner) GetExternalCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ExternalCount
}

// GetExternalCountOk returns a tuple with the ExternalCount field value
// and a boolean to check if the value has been set.
func (o *MultipleEventDeltaDtoInnerEventsInner) GetExternalCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalCount, true
}

// SetExternalCount sets field value
func (o *MultipleEventDeltaDtoInnerEventsInner) SetExternalCount(v float32) {
	o.ExternalCount = v
}

// GetHasDiff returns the HasDiff field value
func (o *MultipleEventDeltaDtoInnerEventsInner) GetHasDiff() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasDiff
}

// GetHasDiffOk returns a tuple with the HasDiff field value
// and a boolean to check if the value has been set.
func (o *MultipleEventDeltaDtoInnerEventsInner) GetHasDiffOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasDiff, true
}

// SetHasDiff sets field value
func (o *MultipleEventDeltaDtoInnerEventsInner) SetHasDiff(v bool) {
	o.HasDiff = v
}

// GetThreshold returns the Threshold field value
func (o *MultipleEventDeltaDtoInnerEventsInner) GetThreshold() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value
// and a boolean to check if the value has been set.
func (o *MultipleEventDeltaDtoInnerEventsInner) GetThresholdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Threshold, true
}

// SetThreshold sets field value
func (o *MultipleEventDeltaDtoInnerEventsInner) SetThreshold(v float32) {
	o.Threshold = v
}

// GetLastUpdatedTime returns the LastUpdatedTime field value
func (o *MultipleEventDeltaDtoInnerEventsInner) GetLastUpdatedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastUpdatedTime
}

// GetLastUpdatedTimeOk returns a tuple with the LastUpdatedTime field value
// and a boolean to check if the value has been set.
func (o *MultipleEventDeltaDtoInnerEventsInner) GetLastUpdatedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdatedTime, true
}

// SetLastUpdatedTime sets field value
func (o *MultipleEventDeltaDtoInnerEventsInner) SetLastUpdatedTime(v time.Time) {
	o.LastUpdatedTime = v
}

func (o MultipleEventDeltaDtoInnerEventsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultipleEventDeltaDtoInnerEventsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["source"] = o.Source
	toSerialize["event"] = o.Event
	toSerialize["internal_count"] = o.InternalCount
	toSerialize["external_count"] = o.ExternalCount
	toSerialize["has_diff"] = o.HasDiff
	toSerialize["threshold"] = o.Threshold
	toSerialize["last_updated_time"] = o.LastUpdatedTime
	return toSerialize, nil
}

func (o *MultipleEventDeltaDtoInnerEventsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"source",
		"event",
		"internal_count",
		"external_count",
		"has_diff",
		"threshold",
		"last_updated_time",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMultipleEventDeltaDtoInnerEventsInner := _MultipleEventDeltaDtoInnerEventsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMultipleEventDeltaDtoInnerEventsInner)

	if err != nil {
		return err
	}

	*o = MultipleEventDeltaDtoInnerEventsInner(varMultipleEventDeltaDtoInnerEventsInner)

	return err
}

type NullableMultipleEventDeltaDtoInnerEventsInner struct {
	value *MultipleEventDeltaDtoInnerEventsInner
	isSet bool
}

func (v NullableMultipleEventDeltaDtoInnerEventsInner) Get() *MultipleEventDeltaDtoInnerEventsInner {
	return v.value
}

func (v *NullableMultipleEventDeltaDtoInnerEventsInner) Set(val *MultipleEventDeltaDtoInnerEventsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipleEventDeltaDtoInnerEventsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipleEventDeltaDtoInnerEventsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipleEventDeltaDtoInnerEventsInner(val *MultipleEventDeltaDtoInnerEventsInner) *NullableMultipleEventDeltaDtoInnerEventsInner {
	return &NullableMultipleEventDeltaDtoInnerEventsInner{value: val, isSet: true}
}

func (v NullableMultipleEventDeltaDtoInnerEventsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipleEventDeltaDtoInnerEventsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


